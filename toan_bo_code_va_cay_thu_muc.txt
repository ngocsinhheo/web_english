📦 Cấu trúc thư mục & mã nguồn: C:\xampp\htdocs\web_english

- 📁 admin/
  - 📄 admin.php

  ----- 📄 Nội dung file: admin\admin.php -----
<?php
session_start();
require_once '../config/config.php';

// Bật hiển thị lỗi để debug
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

if (!isset($_SESSION['user_id']) || $_SESSION['role'] !== 'admin') {
    header("Location: ../auth/login.php");
    exit();
}

// Hàm xử lý upload file
function handleFileUpload($file, $targetDir) {
    $fileName = basename($file["name"]);
    $targetPath = $targetDir . $fileName;

    // Kiểm tra loại tệp
    $allowedTypes = ['image/jpeg', 'image/png', 'application/pdf', 'video/mp4'];
    if (!in_array($file['type'], $allowedTypes)) {
        throw new Exception("Loại tệp không được hỗ trợ!");
    }

    // Kiểm tra kích thước tệp (tối đa 5MB)
    if ($file['size'] > 5 * 1024 * 1024) {
        throw new Exception("Tệp quá lớn! Tối đa 5MB.");
    }

    return move_uploaded_file($file["tmp_name"], $targetPath) ? $targetPath : false;
}

// Xử lý phản hồi tin nhắn
if (isset($_POST['reply_message'])) {
    try {
        $contact_id = filter_var($_POST['contact_id'], FILTER_SANITIZE_NUMBER_INT);
        $reply = filter_var($_POST['reply'], FILTER_SANITIZE_STRING);

        $stmt = $conn->prepare("UPDATE contacts SET reply = ?, status = 'replied', replied_at = NOW() WHERE id = ?");
        $stmt->bind_param("si", $reply, $contact_id);
        $stmt->execute() ? $success = "Phản hồi thành công!" : throw new Exception($conn->error);
        $stmt->close();

        // Tải lại trang để cập nhật giao diện
        header("Location: admin.php");
        exit();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý thêm người dùng
if (isset($_POST['add_user'])) {
    try {
        $username = filter_var($_POST['username'], FILTER_SANITIZE_STRING);
        $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
        $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

        $stmt = $conn->prepare("INSERT INTO users (username, email, password, role) VALUES (?, ?, ?, 'user')");
        $stmt->bind_param("sss", $username, $email, $password);
        $stmt->execute() ? $success = "Thêm người dùng thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý xóa người dùng
if (isset($_GET['delete_user'])) {
    try {
        $user_id = filter_var($_GET['delete_user'], FILTER_SANITIZE_NUMBER_INT);
        $stmt = $conn->prepare("DELETE FROM users WHERE id = ? AND role != 'admin'");
        $stmt->bind_param("i", $user_id);
        $stmt->execute() ? $success = "Xóa người dùng thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý thêm khóa học
if (isset($_POST['add_course'])) {
    try {
        $title = filter_var($_POST['title'], FILTER_SANITIZE_STRING);
        $description = filter_var($_POST['description'], FILTER_SANITIZE_STRING);
        $teacher_name = filter_var($_POST['teacher_name'], FILTER_SANITIZE_STRING);
        $price = filter_var($_POST['price'], FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION);
        $target_dir = "../uploads/";
        
        $image = handleFileUpload($_FILES["image"], $target_dir);
        $content_file = handleFileUpload($_FILES["content_file"], $target_dir);
        $video_file = handleFileUpload($_FILES["video_file"], $target_dir);

        if (!$image || !$content_file || !$video_file) throw new Exception("Lỗi upload file!");

        $stmt = $conn->prepare("INSERT INTO courses (title, description, price, teacher_name, image, content_file, video_file) VALUES (?, ?, ?, ?, ?, ?, ?)");
        $stmt->bind_param("ssdssss", $title, $description, $price, $teacher_name, $image, $content_file, $video_file);
        $stmt->execute() ? $success = "Thêm khóa học thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý thêm bài học con
if (isset($_POST['add_sub_lesson'])) {
    try {
        $course_id = filter_var($_POST['course_id'], FILTER_SANITIZE_NUMBER_INT);
        $title = filter_var($_POST['title'], FILTER_SANITIZE_STRING);
        $description = filter_var($_POST['description'], FILTER_SANITIZE_STRING);
        $order_number = filter_var($_POST['order_number'], FILTER_SANITIZE_NUMBER_INT);
        $target_dir = "../uploads/";

        $video_file = handleFileUpload($_FILES["video_file"], $target_dir);
        $content_file = handleFileUpload($_FILES["content_file"], $target_dir);

        if (!$video_file || !$content_file) throw new Exception("Lỗi upload file!");

        $stmt = $conn->prepare("INSERT INTO sub_lessons (course_id, title, description, video_file, content_file, order_number) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->bind_param("issssi", $course_id, $title, $description, $video_file, $content_file, $order_number);
        $stmt->execute() ? $success = "Thêm bài học con thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý thêm câu hỏi kiểm tra
if (isset($_POST['add_test_question'])) {
    try {
        $sub_lesson_id = filter_var($_POST['sub_lesson_id'], FILTER_SANITIZE_NUMBER_INT);
        $question_text = filter_var($_POST['question_text'], FILTER_SANITIZE_STRING);
        $option_a = filter_var($_POST['option_a'], FILTER_SANITIZE_STRING);
        $option_b = filter_var($_POST['option_b'], FILTER_SANITIZE_STRING);
        $option_c = filter_var($_POST['option_c'], FILTER_SANITIZE_STRING);
        $option_d = filter_var($_POST['option_d'], FILTER_SANITIZE_STRING);
        $correct_answer = filter_var($_POST['correct_answer'], FILTER_SANITIZE_STRING);

        $stmt = $conn->prepare("INSERT INTO sub_lesson_tests (sub_lesson_id, question_text, option_a, option_b, option_c, option_d, correct_answer) VALUES (?, ?, ?, ?, ?, ?, ?)");
        $stmt->bind_param("issssss", $sub_lesson_id, $question_text, $option_a, $option_b, $option_c, $option_d, $correct_answer);
        $stmt->execute() ? $success = "Thêm câu hỏi kiểm tra thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý xóa khóa học
if (isset($_GET['delete_course'])) {
    try {
        $course_id = filter_var($_GET['delete_course'], FILTER_SANITIZE_NUMBER_INT);
        $stmt = $conn->prepare("DELETE FROM courses WHERE id = ?");
        $stmt->bind_param("i", $course_id);
        $stmt->execute() ? $success = "Xóa khóa học thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý xóa bài học con
if (isset($_GET['delete_sub_lesson'])) {
    try {
        $sub_lesson_id = filter_var($_GET['delete_sub_lesson'], FILTER_SANITIZE_NUMBER_INT);
        $stmt = $conn->prepare("DELETE FROM sub_lessons WHERE id = ?");
        $stmt->bind_param("i", $sub_lesson_id);
        $stmt->execute() ? $success = "Xóa bài học con thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

// Xử lý xóa câu hỏi kiểm tra
if (isset($_GET['delete_test_question'])) {
    try {
        $question_id = filter_var($_GET['delete_test_question'], FILTER_SANITIZE_NUMBER_INT);
        // SỬA LẠI TÊN BẢNG Ở ĐÂY:
        $stmt = $conn->prepare("DELETE FROM sub_lesson_tests WHERE id = ?");
        $stmt->bind_param("i", $question_id);
        $stmt->execute() ?
        $success = "Xóa câu hỏi kiểm tra thành công!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}
// Truy vấn dữ liệu
$result_users = $conn->query("SELECT id, username, email FROM users WHERE role != 'admin'");
$total_users = $result_users->num_rows ?? 0;

$result_courses = $conn->query("SELECT id, title, description, price, teacher_name, image, content_file, video_file FROM courses");
$popular_courses = [];
while ($course = $result_courses->fetch_assoc()) {
    $popular_courses[$course['title']] = rand(10, 100); // Giả lập lượt thích
}
$result_courses->data_seek(0);

$result_contacts = $conn->query("SELECT id, user_id, username, message, status, reply, created_at, replied_at FROM contacts ORDER BY created_at DESC");
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - TOEIC Learning</title>
    <link rel="stylesheet" href="../style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f4f4f4;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: #fff;
            padding: 20px;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 20px;
            font-size: 24px;
        }

        .sidebar ul {
            list-style: none;
        }

        .sidebar ul li {
            padding: 15px;
            margin-bottom: 10px;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s;
        }

        .sidebar ul li:hover {
            background-color: #34495e;
        }

        .sidebar ul li.active {
            background-color: #3498db;
        }

        .sidebar ul li a {
            color: #fff;
            text-decoration: none;
            display: block;
        }

        .main-content {
            flex: 1;
            padding: 30px;
            background-color: #fff;
        }

        .content-section {
            display: none;
        }

        .content-section.active {
            display: block;
        }

        .main-content h1 {
            font-size: 28px;
            margin-bottom: 20px;
            color: #2c3e50;
        }

        form {
            margin-bottom: 30px;
        }

        form input, form textarea, form select {
            padding: 10px;
            margin: 5px 0;
            width: calc(100% - 22px);
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        form button {
            padding: 10px 20px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        form button:hover {
            background-color: #218838;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table th, table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        table th {
            background-color: #f8f9fa;
            color: #2c3e50;
        }

        table td img {
            max-width: 100px;
            border-radius: 5px;
        }

        table td a {
            color: #3498db;
            text-decoration: none;
        }

        table td a.delete-btn {
            color: #dc3545;
        }

        table td a:hover {
            text-decoration: underline;
        }

        .chart-container {
            max-width: 600px;
            margin: 20px 0;
        }

        .success {
            color: #28a745;
            padding: 10px;
            background-color: #e9f7ef;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .error {
            color: #dc3545;
            padding: 10px;
            background-color: #f8e1e1;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .reply-btn {
            padding: 5px 10px;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .reply-btn:hover {
            background-color: #2980b9;
        }

        /* CSS cho accordion */
        .accordion-header {
            background: #f9fbfd;
            padding: 10px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #ddd;
        }

        .accordion-header span {
            font-size: 18px;
            color: #3498db;
        }

        .accordion-content {
            display: none;
            padding: 15px;
            background: #fff;
        }

        .accordion-content.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <h2>Admin Panel</h2>
            <ul>
                <li onclick="showSection('dashboard')" class="active">Dashboard</li>
                <li onclick="showSection('users')">Quản Lý Người Dùng</li>
                <li onclick="showSection('courses')">Quản Lý Khóa Học</li>
                <li onclick="showSection('contacts')">Quản Lý Tin Nhắn</li>
                <li><a href="../auth/logout.php">Đăng xuất</a></li>
            </ul>
        </div>

        <div class="main-content">
            <?php if (isset($success)): ?><p class="success"><?php echo $success; ?></p><?php endif; ?>
            <?php if (isset($error)): ?><p class="error"><?php echo $error; ?></p><?php endif; ?>

            <div id="dashboard" class="content-section active">
                <h1>Dashboard</h1>
                <div class="chart-container">
                    <canvas id="dashboardUserChart"></canvas>
                </div>
                <div class="chart-container">
                    <canvas id="popularCoursesChart"></canvas>
                </div>
            </div>

            <div id="users" class="content-section">
                <h1>Quản Lý Người Dùng</h1>
                <form method="POST">
                    <input type="text" name="username" placeholder="Tên người dùng" required>
                    <input type="email" name="email" placeholder="Email" required>
                    <input type="password" name="password" placeholder="Mật khẩu" required>
                    <button type="submit" name="add_user">Thêm</button>
                </form>
                <table>
                    <tr><th>ID</th><th>Tên</th><th>Email</th><th>Hành động</th></tr>
                    <?php while ($user = $result_users->fetch_assoc()): ?>
                        <tr>
                            <td><?php echo $user['id']; ?></td>
                            <td><?php echo htmlspecialchars($user['username']); ?></td>
                            <td><?php echo htmlspecialchars($user['email']); ?></td>
                            <td><a class="delete-btn" href="?delete_user=<?php echo $user['id']; ?>" onclick="return confirm('Xác nhận xóa?')">Xóa</a></td>
                        </tr>
                    <?php endwhile; ?>
                </table>
            </div>

            <div id="courses" class="content-section">
                <h1>Quản Lý Khóa Học</h1>
                <form method="POST" enctype="multipart/form-data">
                    <input type="text" name="title" placeholder="Tên khóa học" required>
                    <textarea name="description" placeholder="Mô tả" required></textarea>
                    <input type="text" name="teacher_name" placeholder="Giáo viên" required>
                    <input type="number" name="price" placeholder="Giá" required>
                    <input type="file" name="image" accept="image/*" required>
                    <input type="file" name="content_file" accept=".pdf" required>
                    <input type="file" name="video_file" accept="video/*" required>
                    <button type="submit" name="add_course">Thêm</button>
                </form>
                <table>
                    <tr><th>ID</th><th>Tiêu đề</th><th>Giá</th><th>Giáo viên</th><th>Hình ảnh</th><th>Tài liệu</th><th>Video</th><th>Hành động</th></tr>
                    <?php while ($course = $result_courses->fetch_assoc()): ?>
                        <tr>
                            <td><?php echo $course['id']; ?></td>
                            <td>
                                <div class="accordion-header">
                                    <span><?php echo htmlspecialchars($course['title']); ?></span>
                                    <span>▼</span>
                                </div>
                                <div class="accordion-content">
                                    <!-- Hiển thị bài học con -->
                                    <h3 style="margin: 10px 0;">Bài học con</h3>
                                    <form method="POST" enctype="multipart/form-data">
                                        <input type="hidden" name="course_id" value="<?php echo $course['id']; ?>">
                                        <input type="text" name="title" placeholder="Tiêu đề bài học" required>
                                        <textarea name="description" placeholder="Mô tả bài học" required></textarea>
                                        <input type="number" name="order_number" placeholder="Thứ tự bài học" required>
                                        <input type="file" name="video_file" accept="video/*" required>
                                        <input type="file" name="content_file" accept=".pdf" required>
                                        <button type="submit" name="add_sub_lesson">Thêm bài học con</button>
                                    </form>
                                    <table style="margin-top: 10px;">
                                        <tr><th>ID</th><th>Tiêu đề</th><th>Mô tả</th><th>Thứ tự</th><th>Tài liệu</th><th>Video</th><th>Hành động</th></tr>
                                        <?php
                                        $sub_lessons = $conn->query("SELECT * FROM sub_lessons WHERE course_id = {$course['id']} ORDER BY order_number ASC");
                                        while ($sub_lesson = $sub_lessons->fetch_assoc()):
                                        ?>
                                            <tr>
                                                <td><?php echo $sub_lesson['id']; ?></td>
                                                <td>
                                                    <div class="accordion-header">
                                                        <span><?php echo htmlspecialchars($sub_lesson['title']); ?></span>
                                                        <span>▼</span>
                                                    </div>
                                                    <div class="accordion-content">
                                                        <!-- Form thêm câu hỏi kiểm tra -->
                                                        <h4 style="margin: 10px 0;">Thêm câu hỏi kiểm tra</h4>
                                                        <form method="POST">
                                                            <input type="hidden" name="sub_lesson_id" value="<?php echo $sub_lesson['id']; ?>">
                                                            <textarea name="question_text" placeholder="Câu hỏi" required></textarea>
                                                            <input type="text" name="option_a" placeholder="Lựa chọn A" required>
                                                            <input type="text" name="option_b" placeholder="Lựa chọn B" required>
                                                            <input type="text" name="option_c" placeholder="Lựa chọn C" required>
                                                            <input type="text" name="option_d" placeholder="Lựa chọn D" required>
                                                            <select name="correct_answer" required>
                                                                <option value="A">A</option>
                                                                <option value="B">B</option>
                                                                <option value="C">C</option>
                                                                <option value="D">D</option>
                                                            </select>
                                                            <button type="submit" name="add_test_question">Thêm câu hỏi</button>
                                                        </form>
                                                        <!-- Danh sách câu hỏi kiểm tra -->
                                                        <h4 style="margin: 10px 0;">Danh sách câu hỏi kiểm tra</h4>
                                                        <table style="margin-top: 10px;">
                                                            <tr><th>ID</th><th>Câu hỏi</th><th>Lựa chọn A</th><th>Lựa chọn B</th><th>Lựa chọn C</th><th>Lựa chọn D</th><th>Đáp án đúng</th><th>Hành động</th></tr>
                                                            <?php
                                                            $questions = $conn->query("SELECT * FROM sub_lesson_tests WHERE sub_lesson_id = {$sub_lesson['id']}");
                                                            while ($question = $questions->fetch_assoc()):
                                                            ?>
                                                                <tr>
                                                                    <td><?php echo $question['id']; ?></td>
                                                                    <td><?php echo htmlspecialchars($question['question_text']); ?></td>
                                                                    <td><?php echo htmlspecialchars($question['option_a']); ?></td>
                                                                    <td><?php echo htmlspecialchars($question['option_b']); ?></td>
                                                                    <td><?php echo htmlspecialchars($question['option_c']); ?></td>
                                                                    <td><?php echo htmlspecialchars($question['option_d']); ?></td>
                                                                    <td><?php echo htmlspecialchars($question['correct_answer']); ?></td>
                                                                    <td>
                                                                        <a class="delete-btn" href="?delete_test_question=<?php echo $question['id']; ?>" onclick="return confirm('Xác nhận xóa?')">Xóa</a>
                                                                    </td>
                                                                </tr>
                                                            <?php endwhile; ?>
                                                        </table>
                                                    </div>
                                                </td>
                                                <td><?php echo htmlspecialchars($sub_lesson['description']); ?></td>
                                                <td><?php echo $sub_lesson['order_number']; ?></td>
                                                <td><a href="<?php echo $sub_lesson['content_file']; ?>" target="_blank">Xem</a></td>
                                                <td><a href="<?php echo $sub_lesson['video_file']; ?>" target="_blank">Xem</a></td>
                                                <td>
                                                    <a class="delete-btn" href="?delete_sub_lesson=<?php echo $sub_lesson['id']; ?>" onclick="return confirm('Xác nhận xóa?')">Xóa</a>
                                                </td>
                                            </tr>
                                        <?php endwhile; ?>
                                    </table>
                                </div>
                            </td>
                            <td><?php echo number_format($course['price'], 0, ',', '.'); ?> VNĐ</td>
                            <td><?php echo htmlspecialchars($course['teacher_name']); ?></td>
                            <td>
                                <?php if (file_exists($course['image'])): ?>
                                    <img src="<?php echo $course['image']; ?>" alt="Ảnh">
                                <?php else: ?>
                                    <span>Hình ảnh không tồn tại</span>
                                <?php endif; ?>
                            </td>
                            <td><a href="<?php echo $course['content_file']; ?>" target="_blank">Xem</a></td>
                            <td><a href="<?php echo $course['video_file']; ?>" target="_blank">Xem</a></td>
                            <td>
                                <a href="course_detail.php?id=<?php echo $course['id']; ?>">Xem chi tiết</a>
                                <a class="delete-btn" href="?delete_course=<?php echo $course['id']; ?>" onclick="return confirm('Xác nhận xóa?')">Xóa</a>
                            </td>
                        </tr>
                    <?php endwhile; ?>
                </table>
                <?php $result_courses->close(); ?>
            </div>

            <div id="contacts" class="content-section">
                <h1>Quản Lý Tin Nhắn Liên Hệ</h1>
                <table>
                    <tr><th>ID</th><th>Người gửi</th><th>Tin nhắn</th><th>Trạng thái</th><th>Phản hồi</th><th>Thời gian gửi</th><th>Hành động</th></tr>
                    <?php while ($contact = $result_contacts->fetch_assoc()): ?>
                        <tr>
                            <td><?php echo $contact['id']; ?></td>
                            <td><?php echo htmlspecialchars($contact['username']); ?></td>
                            <td><?php echo htmlspecialchars($contact['message']); ?></td>
                            <td><?php echo $contact['status'] === 'pending' ? 'Chờ xử lý' : 'Đã phản hồi'; ?></td>
                            <td><?php echo $contact['reply'] ? htmlspecialchars($contact['reply']) : 'Chưa có'; ?></td>
                            <td><?php echo date('d/m/Y H:i', strtotime($contact['created_at'])); ?></td>
                            <td>
                                <?php if ($contact['status'] === 'pending'): ?>
                                    <button class="reply-btn" data-id="<?php echo $contact['id']; ?>" data-message="<?php echo htmlspecialchars(json_encode($contact['message'], JSON_HEX_QUOT | JSON_HEX_APOS), ENT_QUOTES, 'UTF-8'); ?>">Phản hồi</button>
                                <?php endif; ?>
                            </td>
                        </tr>
                    <?php endwhile; ?>
                </table>

                <div id="replyForm" style="display: none; margin-top: 20px;">
                    <form method="POST">
                        <input type="hidden" name="contact_id" id="contactId">
                        <p><strong>Tin nhắn:</strong> <span id="messagePreview"></span></p>
                        <textarea name="reply" placeholder="Nhập phản hồi của bạn" required></textarea>
                        <button type="submit" name="reply_message">Gửi phản hồi</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        function showSection(sectionId) {
            document.querySelectorAll('.content-section').forEach(s => s.classList.remove('active'));
            document.querySelectorAll('.sidebar li').forEach(l => l.classList.remove('active'));
            document.getElementById(sectionId).classList.add('active');
            document.querySelector(`li[onclick="showSection('${sectionId}')"]`).classList.add('active');
        }

        function showReplyForm(id, message) {
            console.log('showReplyForm called with id:', id, 'message:', message); // Debug
            const replyForm = document.getElementById('replyForm');
            if (replyForm) {
                replyForm.style.display = 'block';
                document.getElementById('contactId').value = id;
                document.getElementById('messagePreview').textContent = message;
            } else {
                console.error('replyForm element not found'); // Debug
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Gán sự kiện cho các nút "Phản hồi"
            document.querySelectorAll('.reply-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const id = button.getAttribute('data-id');
                    const message = JSON.parse(button.getAttribute('data-message'));
                    showReplyForm(id, message);
                });
            });

            // Gán sự kiện cho tất cả các accordion (cả khóa học và bài học con)
            document.querySelectorAll('.accordion-header').forEach(header => {
                header.addEventListener('click', () => {
                    const content = header.nextElementSibling;
                    const arrow = header.querySelector('span:last-child');
                    content.classList.toggle('active');
                    arrow.textContent = content.classList.contains('active') ? '▲' : '▼';
                });
            });

            // Biểu đồ người dùng
            new Chart(document.getElementById('dashboardUserChart'), {
                type: 'bar',
                data: {
                    labels: ['Tổng người dùng', 'Người dùng mới', 'Hoạt động'],
                    datasets: [{
                        label: 'Số lượng',
                        data: [<?php echo $total_users; ?>, <?php echo rand(0, $total_users); ?>, <?php echo rand(0, $total_users); ?>],
                        backgroundColor: ['#36A2EB', '#4BC0C0', '#FF9F40']
                    }]
                },
                options: { scales: { y: { beginAtZero: true } } }
            });

            // Biểu đồ khóa học phổ biến
            const courseLabels = <?php echo json_encode(array_keys($popular_courses)); ?>;
            const courseData = <?php echo json_encode(array_values($popular_courses)); ?>;
            new Chart(document.getElementById('popularCoursesChart'), {
                type: 'bar',
                data: {
                    labels: courseLabels.length ? courseLabels : ['Không có dữ liệu'],
                    datasets: [{
                        label: 'Lượt thích',
                        data: courseData.length ? courseData : [0],
                        backgroundColor: '#9966FF'
                    }]
                },
                options: { scales: { y: { beginAtZero: true } } }
            });
        });
    </script>
</body>
</html>
<?php $conn->close(); ?>
  ----- 🔚 Hết file: admin\admin.php -----

  - 📄 check_test.php

  ----- 📄 Nội dung file: admin\check_test.php -----
<?php
session_start(); // [source: 401]
require_once '../config/config.php'; // [source: 401]

// Kiểm tra đăng nhập
if (!isset($_SESSION['user_id'])) { // [source: 401]
    header("Location: ../auth/login.php");
    exit();
}

// Lấy ID bài học và khóa học từ URL, lọc dữ liệu
$sub_lesson_id = filter_var($_GET['sub_lesson_id'] ?? 0, FILTER_SANITIZE_NUMBER_INT); // [source: 402]
$course_id = filter_var($_GET['course_id'] ?? 0, FILTER_SANITIZE_NUMBER_INT); // [source: 402]

// Kiểm tra ID hợp lệ
if (!$sub_lesson_id || !$course_id) { // [source: 403]
    // Ghi log lỗi hoặc hiển thị thông báo thân thiện hơn
    error_log("Thiếu thông tin bài học hoặc khóa học: sub_lesson_id=$sub_lesson_id, course_id=$course_id");
    die("Lỗi: Thiếu thông tin bài học hoặc khóa học cần thiết."); // [source: 403]
}

// Lấy thông tin bài học con
$stmt_lesson = $conn->prepare("SELECT title FROM sub_lessons WHERE id = ?"); // [source: 404] (Chỉ cần title)
if ($stmt_lesson === false) {
    error_log("Lỗi Prepare Statement (lesson): " . $conn->error);
    die("Lỗi hệ thống khi lấy thông tin bài học.");
}
$stmt_lesson->bind_param("i", $sub_lesson_id); // [source: 404]
$stmt_lesson->execute(); // [source: 404]
$result_lesson = $stmt_lesson->get_result();
$sub_lesson = $result_lesson->fetch_assoc(); // [source: 404]
$stmt_lesson->close();

if (!$sub_lesson) {
     error_log("Không tìm thấy bài học với ID: $sub_lesson_id");
     die("Lỗi: Bài học không tồn tại!"); // [source: 404]
}


// Lấy danh sách câu hỏi kiểm tra cho bài học này
$test_stmt = $conn->prepare("SELECT id, question_text, option_a, option_b, option_c, option_d FROM sub_lesson_tests WHERE sub_lesson_id = ?"); // [source: 405] (Không lấy correct_answer ở đây nữa)
if ($test_stmt === false) {
    error_log("Lỗi Prepare Statement (questions): " . $conn->error);
    die("Lỗi hệ thống khi lấy câu hỏi kiểm tra.");
}
$test_stmt->bind_param("i", $sub_lesson_id); // [source: 405]
$test_stmt->execute(); // [source: 405]
$questions = $test_stmt->get_result(); // [source: 405]

?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bài kiểm tra: <?php echo htmlspecialchars($sub_lesson['title']); ?> - English Learning</title>
    <link rel="stylesheet" href="../style.css"> <style>
        body {
            margin: 0; /* [source: 407] */
            font-family: Arial, sans-serif; /* [source: 407] */
            background-color: #f4f4f4; /* [source: 407] */
        }

        .test-container {
            width: 90%; /* [source: 408] */
            max-width: 800px; /* [source: 408] */
            margin: 40px auto; /* [source: 408] */
            padding: 30px; /* [source: 408] (Tăng padding) */
            background: #fff; /* [source: 408] */
            border-radius: 10px; /* [source: 408] */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* [source: 409] (Tăng shadow) */
        }

        .test-container h2 {
            font-size: 28px; /* [source: 410] */
            font-weight: 700; /* [source: 410] */
            color: #2c3e50; /* [source: 410] */
            text-align: center; /* [source: 410] */
            margin-bottom: 30px; /* [source: 410] (Tăng margin) */
        }

        .question {
            margin-bottom: 25px; /* [source: 411] (Tăng margin) */
            padding-bottom: 20px; /* Thêm padding dưới */
            border-bottom: 1px solid #eee; /* Thêm đường kẻ phân cách */
        }
         .question:last-child {
             border-bottom: none; /* Bỏ đường kẻ cho câu cuối */
             margin-bottom: 0;
             padding-bottom: 0;
         }

        .question p { /* Nội dung câu hỏi */
            font-size: 18px; /* [source: 412] (Tăng font-size) */
            font-weight: 500; /* [source: 412] */
            color: #34495e; /* [source: 412] (Đổi màu) */
            margin-bottom: 15px; /* [source: 412] (Tăng margin) */
        }

        .option {
            margin: 8px 0; /* [source: 413] */
            display: flex; /* [source: 413] */
            align-items: center; /* [source: 413] */
        }

        .option input[type="radio"] {
            margin-right: 10px; /* [source: 414] */
            width: 18px; /* Phóng to radio button */
            height: 18px; /* Phóng to radio button */
            cursor: pointer;
        }
         .option input[type="radio"]:disabled {
             cursor: not-allowed; /* Con trỏ khi bị vô hiệu hóa */
         }

        .option label {
            font-size: 16px;
            color: #2c3e50;
            cursor: pointer;
            transition: all 0.2s ease; /* Hiệu ứng khi hover/chọn */
        }

        /* --- CSS CHO HIỂN THỊ ĐÚNG/SAI --- */
        .option label.user-correct {
            color: #28a745; /* Màu xanh lá */
            font-weight: bold;
        }
        .option label.user-incorrect {
            color: #dc3545; /* Màu đỏ */
            text-decoration: line-through; /* Gạch ngang câu sai */
        }
        .option label.correct-answer {
            background-color: #d4edda; /* Nền xanh lá nhạt */
            padding: 3px 6px;
            border-radius: 4px;
            border: 1px solid #c3e6cb;
            font-weight: bold;
            margin-left: 5px; /* Khoảng cách nhỏ nếu là đáp án đúng */
        }
         .option label .feedback-text { /* Style cho text (Bạn chọn đúng/sai) */
             font-style: italic;
             font-size: 0.9em;
             margin-left: 8px;
         }
        /* --- HẾT CSS ĐÚNG/SAI --- */


        .test-container button[type="submit"] { /* Nút nộp bài */
            display: block; /* [source: 415] */
            background: linear-gradient(90deg, #3498db, #2980b9); /* [source: 415] */
            color: #fff; /* [source: 415] */
            border: none; /* [source: 415] */
            padding: 12px 25px; /* [source: 415] (Tăng padding) */
            border-radius: 25px; /* [source: 415] */
            font-weight: 600; /* [source: 415] */
            cursor: pointer; /* [source: 415] */
            margin: 30px auto 0; /* [source: 416] (Tăng margin top) */
            transition: background 0.3s, transform 0.2s; /* Thêm transition */
        }

        .test-container button[type="submit"]:hover {
            background: linear-gradient(90deg, #2980b9, #2471a3); /* [source: 417] */
            transform: translateY(-2px); /* Hiệu ứng hover */
        }

        .test-result { /* Khung hiển thị kết quả tổng */
            margin-top: 30px; /* [source: 418] (Tăng margin) */
            padding: 15px; /* [source: 418] */
            border-radius: 8px; /* [source: 418] */
            text-align: center; /* [source: 418] */
            font-weight: 600; /* [source: 418] */
            display: none; /* [source: 419] */
        }

        .test-result.success { /* Style khi thành công */
            background: #d4edda; /* [source: 420] */
            color: #155724; /* [source: 420] (Đổi màu đậm hơn) */
            border: 1px solid #c3e6cb; /* Thêm border */
        }

        .test-result.error { /* Style khi lỗi */
            background: #f8d7da; /* [source: 421] */
            color: #721c24; /* [source: 421] (Đổi màu đậm hơn) */
            border: 1px solid #f5c6cb; /* Thêm border */
        }

        .back-btn { /* Nút quay lại bài học */
            display: block; /* [source: 422] */
            width: fit-content; /* [source: 422] (Để nút vừa với nội dung) */
            margin: 30px auto 0; /* [source: 422] (Tăng margin top) */
            text-align: center; /* [source: 422] */
            background: linear-gradient(90deg, #6c757d, #5a6268); /* Màu xám */
            color: #fff; /* [source: 423] */
            padding: 12px 25px; /* [source: 423] (Đồng bộ padding) */
            border-radius: 25px; /* [source: 423] */
            text-decoration: none; /* [source: 423] */
            font-weight: 600; /* [source: 423] */
             transition: background 0.3s, transform 0.2s; /* Thêm transition */
        }

        .back-btn:hover {
            background: linear-gradient(90deg, #5a6268, #4e555b); /* [source: 424] (Màu xám đậm hơn) */
             transform: translateY(-2px); /* Hiệu ứng hover */
        }

        @media (max-width: 768px) { /* [source: 425] */
            .test-container {
                width: 95%; /* [source: 425] (Sử dụng % thay vì 100%) */
                margin: 20px auto; /* [source: 425] */
                padding: 20px; /* [source: 425] (Giảm padding) */
            }
             .test-container h2 {
                 font-size: 24px; /* Giảm size tiêu đề */
             }
             .question p {
                 font-size: 16px; /* Giảm size câu hỏi */
             }
             .option label {
                 font-size: 15px; /* Giảm size lựa chọn */
             }
             .test-container button[type="submit"], .back-btn {
                 padding: 10px 20px; /* Giảm padding nút */
             }
        }
    </style>
</head>
<body>
    <div class="test-container">
        <h2>Bài kiểm tra: <?php echo htmlspecialchars($sub_lesson['title']); ?></h2>

        <form id="test-form" data-lesson-id="<?php echo $sub_lesson_id; ?>">
            <?php if ($questions->num_rows > 0): ?>
                <?php $question_index = 1; ?>
                <?php while ($question = $questions->fetch_assoc()): ?>
                    <div class="question">
                        <p><?php echo $question_index++ . '. ' . htmlspecialchars($question['question_text']); ?></p>
                        <?php foreach (['A', 'B', 'C', 'D'] as $option_char): ?>
                            <?php $option_key = 'option_' . strtolower($option_char); ?>
                            <?php if (!empty($question[$option_key])): ?>
                                <div class="option">
                                    <input type="radio" name="q<?php echo $question['id']; ?>" value="<?php echo $option_char; ?>" id="q<?php echo $question['id']; ?>_<?php echo strtolower($option_char); ?>">
                                    <label for="q<?php echo $question['id']; ?>_<?php echo strtolower($option_char); ?>"><?php echo htmlspecialchars($question[$option_key]); ?></label>
                                </div>
                            <?php endif; ?>
                        <?php endforeach; ?>
                    </div>
                <?php endwhile; ?>
                <button type="submit">Nộp bài</button>
            <?php else: ?>
                <p style="text-align: center; color: #6c757d;">Chưa có câu hỏi kiểm tra cho bài học này.</p>
            <?php endif; ?>
        </form>

        <div class="test-result" id="test-result"></div>

        <a href="course_detail.php?id=<?php echo $course_id; ?>" class="back-btn" id="back-btn">Quay lại bài học</a>
    </div>

    <script>
        document.getElementById('test-form').addEventListener('submit', async (e) => {
            e.preventDefault(); // Ngăn form gửi theo cách truyền thống
            const lessonId = e.target.dataset.lessonId; // Lấy lesson_id từ attribute
            const resultDiv = document.getElementById('test-result'); // Div hiển thị kết quả tổng
            const form = e.target; // Form làm bài
            const submitButton = form.querySelector('button[type="submit"]'); // Nút nộp bài
            const backButton = document.getElementById('back-btn'); // Nút quay lại

            // Vô hiệu hóa nút nộp bài để tránh gửi nhiều lần
            submitButton.disabled = true;
            submitButton.textContent = 'Đang xử lý...';

            // Thu thập câu trả lời của người dùng
            const formData = new FormData(form); // [source: 437]
            const answers = {};
            formData.forEach((value, key) => {
                answers[key] = value; // [source: 437]
            });

            try {
                 // Gửi dữ liệu lên server để chấm điểm
                const response = await fetch('check_test.php', {
                    method: 'POST', // [source: 438]
                    headers: { 'Content-Type': 'application/json' }, // [source: 438]
                    body: JSON.stringify({ lesson_id: lessonId, answers }) // [source: 438]
                });

                // Kiểm tra response từ server
                if (!response.ok) {
                    throw new Error(`Lỗi mạng: ${response.statusText}`);
                }

                const result = await response.json(); // Parse kết quả JSON // [source: 439]

                // Hiển thị thông báo kết quả tổng quát
                resultDiv.className = `test-result ${result.success ? 'success' : 'error'}`; // [source: 439]
                resultDiv.textContent = result.message || (result.success ? 'Nộp bài thành công!' : 'Có lỗi xảy ra.'); // [source: 439]
                resultDiv.style.display = 'block'; // [source: 439]

                // Xử lý hiển thị chi tiết đúng/sai nếu thành công và có details
                if (result.success && result.details) {
                    result.details.forEach(detail => {
                        const questionId = detail.question_id;
                        // Tìm khối div.question tương ứng bằng cách tìm input có name=q[id] rồi lấy cha gần nhất là .question
                        const questionBlock = form.querySelector(`input[name="q${questionId}"]`)?.closest('.question');

                        if (questionBlock) {
                            const options = questionBlock.querySelectorAll('input[type="radio"]');
                            options.forEach(option => {
                                option.disabled = true; // Vô hiệu hóa các lựa chọn sau khi nộp bài
                                const label = questionBlock.querySelector(`label[for="${option.id}"]`); // Tìm label tương ứng
                                if (!label) return; // Bỏ qua nếu không tìm thấy label

                                let feedbackText = ''; // Text thêm vào cuối label (vd: Bạn chọn đúng)
                                // Đánh dấu câu trả lời của người dùng
                                if (option.value === detail.user_answer) {
                                    label.classList.add(detail.is_correct ? 'user-correct' : 'user-incorrect');
                                    feedbackText = detail.is_correct ? ' (Bạn chọn đúng)' : ' (Bạn chọn sai)';
                                }

                                // Đánh dấu đáp án đúng (luôn hiển thị)
                                if (option.value === detail.correct_answer) {
                                    label.classList.add('correct-answer');
                                    // Chỉ thêm text "(Đáp án đúng)" nếu nó khác với lựa chọn của người dùng HOẶC người dùng không chọn câu này
                                    if (option.value !== detail.user_answer || detail.user_answer === null) {
                                         // Nếu đáp án đúng không phải là cái user chọn sai, hoặc user không chọn gì cả
                                         if (!label.classList.contains('user-incorrect')) {
                                             feedbackText += ' (Đáp án đúng)';
                                         }
                                    }
                                }
                                // Thêm text phản hồi vào cuối label nếu có
                                if (feedbackText) {
                                    label.innerHTML += `<span class="feedback-text">${feedbackText}</span>`;
                                }

                            });
                        } else {
                             console.warn(`Không tìm thấy khối câu hỏi cho ID: ${questionId}`);
                        }
                    });
                     // Ẩn form sau khi hiển thị chi tiết
                     // form.style.display = 'none'; // Giờ không ẩn form nữa mà chỉ vô hiệu hóa
                     submitButton.style.display = 'none'; // Ẩn nút nộp bài
                } else if (result.success) {
                    // Trường hợp thành công nhưng không có details (dự phòng)
                     // form.style.display = 'none';
                      submitButton.style.display = 'none'; // Ẩn nút nộp bài
                } else {
                     // Trường hợp có lỗi từ server (result.success = false)
                     submitButton.disabled = false; // Cho phép thử lại
                     submitButton.textContent = 'Nộp bài';
                }


                // Ẩn nút submit và hiển thị nút quay lại (di chuyển ra ngoài để luôn thực hiện)
                // form.style.display = 'none'; // [source: 440] - Không ẩn form nữa
                // submitButton.style.display = 'none'; // Ẩn nút submit sau khi xử lý xong
                // backButton.style.display = 'block'; // Hiển thị nút quay lại // [source: 440] - Nút này đã hiển thị sẵn

            } catch (error) {
                 console.error('Lỗi khi nộp bài:', error);
                 resultDiv.className = 'test-result error';
                 resultDiv.textContent = `Lỗi: ${error.message}. Vui lòng thử lại.`;
                 resultDiv.style.display = 'block';
                 // Cho phép người dùng thử lại nếu có lỗi mạng hoặc lỗi khác
                 submitButton.disabled = false;
                 submitButton.textContent = 'Nộp bài';
            }
        });
    </script>

</body>
</html>
<?php
// Đóng các kết nối CSDL
if (isset($test_stmt)) $test_stmt->close(); // [source: 440]
if (isset($conn)) $conn->close(); // [source: 440]
?>
  ----- 🔚 Hết file: admin\check_test.php -----

  - 📄 course_detail.php

  ----- 📄 Nội dung file: admin\course_detail.php -----
<?php
session_start();
require_once '../config/config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: ../auth/login.php");
    exit();
}

$course_id = filter_var($_GET['id'] ?? 0, FILTER_SANITIZE_NUMBER_INT);

// Lấy thông tin khóa học
$stmt = $conn->prepare("SELECT * FROM courses WHERE id = ?");
$stmt->bind_param("i", $course_id);
$stmt->execute();
$course = $stmt->get_result()->fetch_assoc() ?: die("Khóa học không tồn tại!");

// Lấy danh sách bài học con
$stmt = $conn->prepare("SELECT * FROM sub_lessons WHERE course_id = ? ORDER BY order_number ASC");
$stmt->bind_param("i", $course_id);
$stmt->execute();
$sub_lessons = $stmt->get_result();
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo htmlspecialchars($course['title']); ?> - English Learning</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #80deea);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        main {
            flex: 1;
        }
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .logo {
            font-size: 24px;
            font-weight: bold;
        }
        .logo a {
            color: #fff;
            text-decoration: none;
        }
        nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s;
        }
        nav a:hover {
            color: #00bcd4;
        }
        .course-detail-container {
            width: 98%;
            max-width: none;
            margin: 20px auto;
            padding: 20px;
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            box-sizing: border-box;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .course-header {
            width: 100%;
            text-align: center;
            margin-bottom: 30px;
        }
        .course-header h1 {
            font-size: 36px;
            font-weight: 700;
            color: #006064;
            margin-bottom: 10px;
        }
        .course-header p {
            font-size: 18px;
            color: #7f8c8d;
            max-width: 800px;
            margin: 0 auto;
        }
        .content-wrapper {
            display: flex;
            width: 100%;
            gap: 20px;
        }
        .left-content {
            flex: 1;
            min-width: 300px;
        }
        .right-content {
            width: 800px;
            position: sticky;
            top: 20px;
            align-self: flex-start;
            display: none;
        }
        .right-content.active {
            display: block;
        }
        .sub-lesson {
            margin-bottom: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            overflow: hidden;
            background: #f9fbfd;
        }
        .sub-lesson-header {
            background: #e0f7fa;
            padding: 15px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .sub-lesson-header h3 {
            font-size: 20px;
            color: #34495e;
        }
        .sub-lesson-header span {
            font-size: 24px;
            color: #3498db;
        }
        .sub-lesson-content {
            display: none;
            padding: 20px;
            background: #fff;
        }
        .sub-lesson-content.active {
            display: block;
        }
        .sub-lesson-content p {
            font-size: 16px;
            color: #2c3e50;
            margin-bottom: 15px;
        }
        .document-button {
            display: inline-block;
            background: linear-gradient(90deg, #2ecc71, #27ae60);
            color: #fff;
            padding: 10px 20px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            margin-bottom: 15px;
        }
        .document-button:hover {
            background: linear-gradient(90deg, #27ae60, #219653);
        }
        .video-container {
            margin-bottom: 15px;
        }
        .video-container video {
            width: 100%;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        .test-button {
            display: inline-block;
            background: linear-gradient(90deg, #3498db, #2980b9);
            color: #fff;
            padding: 10px 20px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            margin-top: 10px;
        }
        .test-button:hover {
            background: linear-gradient(90deg, #2980b9, #2471a3);
        }
        .back-btn {
            display: block;
            width: 200px;
            margin: 30px auto;
            text-align: center;
            background: linear-gradient(90deg, #dc3545, #c82333);
            color: #fff;
            padding: 12px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
        }
        .back-btn:hover {
            background: linear-gradient(90deg, #c82333, #bd2130);
        }
        footer {
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 20px;
            text-align: center;
            width: 100%;
        }
        footer a {
            color: #fff;
            text-decoration: none;
            display: block;
            margin: 5px 0;
        }
        footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 768px) {
            header {
                flex-direction: column;
            }
            nav {
                margin-top: 10px;
            }
            nav a {
                margin: 5px;
            }
            .course-detail-container {
                width: 100%;
                margin: 10px auto;
                padding: 10px;
            }
            .content-wrapper {
                flex-direction: column;
            }
            .right-content {
                width: 100%;
                position: static;
            }
            .video-container video {
                max-width: 100%;
            }
            footer div {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
<?php include '../searchbar/index.php'; ?>
<script src="../searchbar/js/script.js"></script>
    <header>
        <div class="logo"><a href="../admin/dashboard.php">English Learning</a></div>
        <nav>
            <a href="../admin/dashboard.php">Trang chủ</a>
            <a href="../test/select_test.php">Thi thử</a>
            <a href="../profile.php">Hồ sơ</a>
            <a href="../contact.php">Liên hệ</a>
            <a href="../auth/logout.php" style="color: #ff5252;">Đăng xuất</a>
        </nav>
    </header>

    <main>
        <div class="course-detail-container">
            <div class="course-header">
                <h1><?php echo htmlspecialchars($course['title']); ?></h1>
                <p><?php echo htmlspecialchars($course['description']); ?></p>
            </div>

            <div class="content-wrapper">
                <div class="left-content">
                    <div class="sub-lessons">
                        <?php if ($sub_lessons->num_rows > 0): ?>
                            <?php while ($lesson = $sub_lessons->fetch_assoc()): ?>
                                <div class="sub-lesson">
                                    <div class="sub-lesson-header">
                                        <h3><?php echo htmlspecialchars($lesson['title']); ?></h3>
                                        <span>▼</span>
                                    </div>
                                    <div class="sub-lesson-content">
                                        <?php if ($lesson['content_file']): ?>
                                            <a href="<?php echo htmlspecialchars($lesson['content_file']); ?>" class="document-button" target="_blank">Tài liệu học</a>
                                        <?php endif; ?>
                                        <p><?php echo htmlspecialchars($lesson['description']); ?></p>
                                        <a href="test_page.php?sub_lesson_id=<?php echo $lesson['id']; ?>&course_id=<?php echo $course_id; ?>" class="test-button">Làm bài kiểm tra</a>
                                    </div>
                                </div>
                            <?php endwhile; ?>
                        <?php else: ?>
                            <p>Chưa có bài học con nào cho khóa học này.</p>
                        <?php endif; ?>
                    </div>
                </div>

                <div class="right-content">
                    <?php if ($sub_lessons->num_rows > 0): ?>
                        <?php $sub_lessons->data_seek(0); ?>
                        <?php while ($lesson = $sub_lessons->fetch_assoc()): ?>
                            <?php if ($lesson['video_file']): ?>
                                <div class="video-container" data-lesson-id="<?php echo $lesson['id']; ?>" style="display: none;">
                                    <video controls>
                                        <source src="<?php echo htmlspecialchars($lesson['video_file']); ?>" type="video/mp4">
                                        Trình duyệt không hỗ trợ video.
                                    </video>
                                </div>
                            <?php endif; ?>
                        <?php endwhile; ?>
                    <?php endif; ?>
                </div>
            </div>

            <a href="../admin/dashboard.php" class="back-btn">Quay lại Dashboard</a>
        </div>
    </main>

    <footer>
        <div style="max-width: 1200px; margin: 0 auto;">
            <div style="display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;">
                <div>
                    <h3>English Learning</h3>
                    <p>Học tiếng Anh dễ dàng và hiệu quả!</p>
                </div>
                <div>
                    <h3>Liên kết</h3>
                    <a href="../about.php">Giới thiệu</a>
                    <a href="../contact.php">Liên hệ</a>
                    <a href="../policy.php">Chính sách</a>
                </div>
                <div>
                    <h3>Liên hệ</h3>
                    <p>Email: support@englishlearning.com</p>
                    <p>Hotline: 0123 456 789</p>
                </div>
            </div>
            <p>© 2025 English Learning. All rights reserved.</p>
        </div>
    </footer>

    <script>
        document.querySelectorAll('.sub-lesson-header').forEach(header => {
            header.addEventListener('click', () => {
                const content = header.nextElementSibling;
                const arrow = header.querySelector('span');
                const isActive = content.classList.contains('active');
                const rightContent = document.querySelector('.right-content');

                if (isActive) {
                    content.classList.remove('active');
                    arrow.textContent = '▼';

                    const lessonId = header.closest('.sub-lesson').querySelector('.test-button')?.getAttribute('href')?.match(/sub_lesson_id=(\d+)/)?.[1];
                    if (lessonId) {
                        const videoContainer = document.querySelector(`.video-container[data-lesson-id="${lessonId}"]`);
                        if (videoContainer && videoContainer.style.display === 'block') {
                            const video = videoContainer.querySelector('video');
                            if (video) {
                                video.pause();
                            }
                            videoContainer.style.display = 'none';
                            rightContent.classList.remove('active');
                        }
                    }

                    const anyActive = document.querySelector('.sub-lesson-content.active');
                    if (!anyActive) {
                        rightContent.classList.remove('active');
                    }
                } else {
                    content.classList.add('active');
                    arrow.textContent = '▲';

                    document.querySelectorAll('.video-container').forEach(v => {
                        const video = v.querySelector('video');
                        if (video) {
                            video.pause();
                        }
                        v.style.display = 'none';
                    });

                    const lessonId = header.closest('.sub-lesson').querySelector('.test-button')?.getAttribute('href')?.match(/sub_lesson_id=(\d+)/)?.[1];
                    if (lessonId) {
                        const videoContainer = document.querySelector(`.video-container[data-lesson-id="${lessonId}"]`);
                        if (videoContainer) {
                            videoContainer.style.display = 'block';
                            rightContent.classList.add('active');
                        }
                    }
                }
            });
        });

        const scrollTopBtn = document.createElement('button');
        scrollTopBtn.textContent = '↑';
        scrollTopBtn.style.position = 'fixed';
        scrollTopBtn.style.bottom = '20px';
        scrollTopBtn.style.right = '20px';
        scrollTopBtn.style.background = '#0288d1';
        scrollTopBtn.style.color = '#fff';
        scrollTopBtn.style.padding = '10px';
        scrollTopBtn.style.border = 'none';
        scrollTopBtn.style.borderRadius = '50%';
        scrollTopBtn.style.cursor = 'pointer';
        scrollTopBtn.style.display = 'none';
        document.body.appendChild(scrollTopBtn);

        window.addEventListener('scroll', () => {
            scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none';
        });

        scrollTopBtn.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    </script>
</body>
</html>

<?php $stmt->close(); $conn->close(); ?>
  ----- 🔚 Hết file: admin\course_detail.php -----

  - 📄 create_admin.php

  ----- 📄 Nội dung file: admin\create_admin.php -----
<?php
// Kết nối đến cơ sở dữ liệu
$conn = mysqli_connect('localhost', 'root', '', 'toeicdb');

// Kiểm tra kết nối
if ($conn->connect_error) {
    die("Kết nối thất bại: " . $conn->connect_error);
}

// Kiểm tra xem tài khoản admin đã tồn tại chưa
$sql_check = "SELECT COUNT(*) AS count FROM users WHERE email = 'admin@1'";
$result_check = $conn->query($sql_check);
$row = $result_check->fetch_assoc();

if ($row['count'] == 0) {
    // Tạo tài khoản admin nếu chưa tồn tại
    $username = 'admin';
    $email = 'admin@1';
    $password = '123'; // Mật khẩu gốc
    $hashed_password = password_hash($password, PASSWORD_DEFAULT); // Mã hóa mật khẩu

    // Thêm tài khoản admin vào cơ sở dữ liệu
    $sql = "INSERT INTO users (username, email, password, role, created_at) 
            VALUES (?, ?, ?, 'admin', NOW())";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $hashed_password);

    if ($stmt->execute()) {
        echo "Tạo tài khoản admin thành công!";
    } else {
        echo "Lỗi: " . $stmt->error;
    }

    $stmt->close();
} else {
    echo "Tài khoản admin đã tồn tại!";
}

// Đóng kết nối
$conn->close();
?>

  ----- 🔚 Hết file: admin\create_admin.php -----

  - 📄 dashboard.php

  ----- 📄 Nội dung file: admin\dashboard.php -----
<?php
session_start();
require_once '../config/config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: ../auth/login.php");
    exit();
}

$username = $_SESSION['username'];
$result = $conn->query("SELECT * FROM courses");
$popular_courses = $conn->query("SELECT * FROM courses ORDER BY likes DESC LIMIT 3");
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Học phần <?php echo htmlspecialchars($username); ?></title>
    <link rel="stylesheet" href="../style.css">
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        body {
            background: linear-gradient(135deg, #e0f7fa, #80deea); /* Gradient nền toàn trang */
        }
        header a:hover { color: #00bcd4; }
        .hero .btn:hover { opacity: 0.8; }
        .course:hover { transform: translateY(-5px); border: 2px solid #00bcd4; }
        .course img { transition: transform 0.3s; }
        .course:hover img { transform: scale(1.05); }
        footer a:hover { text-decoration: underline; }
        @media (max-width: 768px) {
            header { flex-direction: column; }
            nav { margin-top: 10px; }
            nav a { margin: 5px; }
            footer div { margin-bottom: 20px; }
        }
    </style>
</head>
<body>
    <header style="position: sticky; top: 0; background: linear-gradient(90deg, #006064, #00acc1); color: #fff; padding: 10px 20px; display: flex; justify-content: space-between; align-items: center; box-shadow: 0 2px 5px rgba(0,0,0,0.1);">
        <div class="logo" style="font-size: 24px; font-weight: bold;">English Learning</div>
        <nav>
            <a href="dashboard.php" style="color: #fff; text-decoration: none; margin: 0 15px; transition: color 0.3s;">Trang chủ</a>
            <a href="../test/select_test.php" style="color: #fff; text-decoration: none; margin: 0 15px; transition: color 0.3s;">Thi thử</a>
            <a href="../profile.php" style="color: #fff; text-decoration: none; margin: 0 15px; transition: color 0.3s;">Hồ sơ</a>
            <a href="../contact.php" style="color: #fff; text-decoration: none; margin: 0 15px; transition: color 0.3s;">Liên hệ</a>
            <a href="../auth/logout.php" style="color: #e74c3c; text-decoration: none; margin: 0 15px; transition: color 0.3s;">Đăng xuất</a>
        </nav>
    </header>

    <section class="hero" style="background: linear-gradient(135deg, #0288d1, #4fc3f7); color: #fff; text-align: center; padding: 100px 20px;">
        <h1 style="font-size: 48px; animation: fadeIn 1s;">Chào mừng <?php echo htmlspecialchars($username); ?>!</h1>
        <p style="font-size: 24px; margin: 20px 0;">Học TIẾNG ANH từ cơ bản đến nâng cao. Cùng nhau chinh phục!</p>
        <div>
            <a href="../test/select_test.php" class="btn" style="background: #3498db; color: #fff; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 10px;">Thi thử</a>
            <a href="#courses" class="btn" style="background: #2ecc71; color: #fff; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 10px;">Khám phá khóa học</a>
        </div>
    </section>

    <section class="popular-courses" style="padding: 50px 20px; background: #e0f7fa;">
        <h2 style="text-align: center; font-size: 32px; margin-bottom: 30px;">Khóa học nổi bật</h2>
        <div class="course-list" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; max-width: 1200px; margin: 0 auto;">
            <?php while ($row = $popular_courses->fetch_assoc()): ?>
                <div class="course" style="background: #fff; border-radius: 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
                    <img src="<?php echo htmlspecialchars($row['image'] ?: '../images/default-course.jpg'); ?>" alt="<?php echo htmlspecialchars($row['title']); ?>" style="width: 100%; height: 200px; object-fit: cover;" loading="lazy">
                    <div style="padding: 20px;">
                        <h3><?php echo htmlspecialchars($row['title']); ?></h3>
                        <p><?php echo htmlspecialchars($row['description']); ?></p>
                        <a href="course_detail.php?id=<?php echo $row['id']; ?>" style="display: inline-block; background: #3498db; color: #fff; padding: 10px 20px; text-decoration: none; border-radius: 5px;">Học ngay</a>
                    </div>
                </div>
            <?php endwhile; ?>
        </div>
    </section>

    <section class="courses" id="courses" style="padding: 50px 20px; background: linear-gradient(135deg, #b3e5fc, #e0f7fa);">
        <h2 style="text-align: center; font-size: 32px; margin-bottom: 30px;">Chọn khóa học</h2>
        <div style="text-align: center; margin-bottom: 20px;">
            <input type="text" id="searchInput" placeholder="Tìm kiếm khóa học..." style="padding: 10px; width: 300px; border: 1px solid #ccc; border-radius: 5px;">
        </div>
        <div class="course-list" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; max-width: 1200px; margin: 0 auto;">
            <?php while ($row = $result->fetch_assoc()): ?>
                <div class="course" style="background: #fff; border-radius: 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); overflow: hidden;">
                    <img src="<?php echo htmlspecialchars($row['image'] ?: '../images/default-course.jpg'); ?>" alt="<?php echo htmlspecialchars($row['title']); ?>" style="width: 100%; height: 200px; object-fit: cover;" loading="lazy">
                    <div style="padding: 20px;">
                        <h3 style="font-size: 24px;"><?php echo htmlspecialchars($row['title']); ?></h3>
                        <p style="color: #666;"><?php echo htmlspecialchars($row['description']); ?></p>
                        <p><strong>Giảng viên:</strong> <?php echo htmlspecialchars($row['teacher_name'] ?: 'Chưa cập nhật'); ?></p>
                        <p><strong>Giá:</strong> <?php echo number_format($row['price'] ?: 0, 0, ',', '.') . ' VNĐ'; ?></p>
                        <a href="course_detail.php?id=<?php echo $row['id']; ?>" style="display: inline-block; background: #3498db; color: #fff; padding: 10px 20px; text-decoration: none; border-radius: 5px;">Học ngay</a>
                    </div>
                </div>
            <?php endwhile; ?>
        </div>
    </section>

    <footer style="background: linear-gradient(90deg, #006064, #00acc1); color: #fff; padding: 20px; text-align: center;">
        <div style="max-width: 1200px; margin: 0 auto;">
            <div style="display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;">
                <div>
                    <h3>English Learning</h3>
                    <p>Học tiếng Anh dễ dàng và hiệu quả!</p>
                </div>
                <div>
                    <h3>Liên kết</h3>
                    <a href="../about.php" style="color: #fff; text-decoration: none; display: block; margin: 5px 0;">Giới thiệu</a>
                    <a href="../contact.php" style="color: #fff; text-decoration: none; display: block; margin: 5px 0;">Liên hệ</a>
                    <a href="../policy.php" style="color: #fff; text-decoration: none; display: block; margin: 5px 0;">Chính sách</a>
                </div>
                <div>
                    <h3>Liên hệ</h3>
                    <p>Email: support@englishlearning.com</p>
                    <p>Hotline: 0123 456 789</p>
                </div>
            </div>
            <p>© 2025 English Learning. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // Tìm kiếm khóa học
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            document.querySelectorAll('.course').forEach(course => {
                const title = course.querySelector('h3').textContent.toLowerCase();
                const desc = course.querySelector('p').textContent.toLowerCase();
                course.style.display = title.includes(search) || desc.includes(search) ? '' : 'none';
            });
        });

        // Smooth scroll
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({ behavior: 'smooth' });
            });
        });

        // Nút quay lại đầu trang
        const scrollTopBtn = document.createElement('button');
        scrollTopBtn.textContent = '↑';
        scrollTopBtn.style.position = 'fixed';
        scrollTopBtn.style.bottom = '20px';
        scrollTopBtn.style.right = '20px';
        scrollTopBtn.style.background = '#3498db';
        scrollTopBtn.style.color = '#fff';
        scrollTopBtn.style.padding = '10px';
        scrollTopBtn.style.border = 'none';
        scrollTopBtn.style.borderRadius = '50%';
        scrollTopBtn.style.cursor = 'pointer';
        scrollTopBtn.style.display = 'none';
        document.body.appendChild(scrollTopBtn);

        window.addEventListener('scroll', () => {
            scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none';
        });

        scrollTopBtn.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });

       
    </script>
</body>
</html>
  ----- 🔚 Hết file: admin\dashboard.php -----

  - 📄 style.css

  ----- 📄 Nội dung file: admin\style.css -----
/* Reset */
* { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Arial, sans-serif; }
body { background: #f4f4f4; color: #2c3e50; line-height: 1.6; }

/* Common */
button, a { cursor: pointer; transition: all 0.3s ease; }
button:hover, a:hover { transform: translateY(-2px); }
table { width: 100%; border-collapse: collapse; margin-top: 20px; }
th, td { padding: 12px 15px; border: 1px solid #e0e0e0; text-align: left; }
.success { 
    color: #28a745; 
    background: #d4edda; 
    padding: 10px; 
    border-radius: 8px; 
    text-align: center; 
    margin-bottom: 20px; 
}
.error { 
    color: #dc3545; 
    background: #f8d7da; 
    padding: 10px; 
    border-radius: 8px; 
    text-align: center; 
    margin-bottom: 20px; 
}

/* Admin Container */
.container { 
    display: flex; 
    min-height: 100vh; 
    background: #f0f2f5; 
}

/* Sidebar */
.sidebar { 
    width: 280px; 
    background: linear-gradient(180deg, #2c3e50, #1a252f); 
    padding: 30px 20px; 
    color: #fff; 
    position: fixed; 
    height: 100%; 
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2); 
    transition: width 0.3s ease; 
}
.sidebar h2 { 
    font-size: 24px; 
    font-weight: 700; 
    margin-bottom: 40px; 
    text-align: center; 
    color: #ecf0f1; 
    text-transform: uppercase; 
    letter-spacing: 1px; 
}
.sidebar ul { 
    list-style: none; 
}
.sidebar li { 
    padding: 15px 20px; 
    margin: 10px 0; 
    border-radius: 8px; 
    font-size: 16px; 
    font-weight: 500; 
    cursor: pointer; 
    transition: background 0.3s ease; 
}
.sidebar li:hover { 
    background: #34495e; 
}
.sidebar li.active { 
    background: #3498db; 
    box-shadow: 0 2px 5px rgba(52, 152, 219, 0.5); 
}
.sidebar a { 
    color: #fff; 
    text-decoration: none; 
    display: block; 
}

/* Main Content */
.main-content { 
    flex: 1; 
    padding: 40px; 
    margin-left: 280px; 
    background: #f0f2f5; 
}
.content-section { 
    display: none; 
    background: #fff; 
    padding: 30px; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
}
.content-section.active { 
    display: block; 
}
h1 { 
    font-size: 32px; 
    font-weight: 700; 
    color: #2c3e50; 
    margin-bottom: 25px; 
    text-align: center; 
}

/* Form trong Admin */
form { 
    display: grid; 
    gap: 15px; 
    max-width: 600px; 
    margin: 0 auto 30px; 
}
form input, 
form textarea { 
    width: 100%; 
    padding: 12px 15px; 
    border: 2px solid #e0e0e0; 
    border-radius: 8px; 
    font-size: 16px; 
    background: #f9fbfd; 
    transition: border-color 0.3s ease; 
}
form input:focus, 
form textarea:focus { 
    border-color: #3498db; 
    outline: none; 
}
form textarea { 
    min-height: 100px; 
    resize: vertical; 
}
form button { 
    background: linear-gradient(90deg, #28a745, #218838); 
    color: #fff; 
    border: none; 
    padding: 12px; 
    border-radius: 8px; 
    font-weight: 600; 
    text-transform: uppercase; 
}
form button:hover { 
    background: linear-gradient(90deg, #218838, #1e7e34); 
    transform: translateY(-3px); 
}

/* Table trong Admin */
th { 
    background: #f5f5f5; 
    font-weight: 600; 
    color: #34495e; 
}
td img { 
    max-width: 100px; 
    border-radius: 8px; 
    vertical-align: middle; 
}
.delete-btn { 
    color: #dc3545; 
    font-weight: 600; 
    text-decoration: none; 
    padding: 5px 10px; 
    border-radius: 5px; 
    display: inline-block; 
}
.delete-btn:hover { 
    background: #dc3545; 
    color: #fff; 
}

/* Chart Container */
.chart-container { 
    width: 70%; 
    max-width: 800px; 
    margin: 30px auto; 
    padding: 20px; 
    background: #fff; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
}
  ----- 🔚 Hết file: admin\style.css -----

  - 📄 test_page.php

  ----- 📄 Nội dung file: admin\test_page.php -----
<?php
session_start();
require_once '../config/config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: ../auth/login.php");
    exit();
}

$sub_lesson_id = filter_var($_GET['sub_lesson_id'] ?? 0, FILTER_SANITIZE_NUMBER_INT);
$course_id = filter_var($_GET['course_id'] ?? 0, FILTER_SANITIZE_NUMBER_INT);

if (!$sub_lesson_id || !$course_id) {
    die("Thiếu thông tin bài học!");
}

// Lấy thông tin bài học con
$stmt = $conn->prepare("SELECT * FROM sub_lessons WHERE id = ?");
$stmt->bind_param("i", $sub_lesson_id);
$stmt->execute();
$sub_lesson = $stmt->get_result()->fetch_assoc() ?: die("Bài học không tồn tại!");

// Lấy danh sách câu hỏi kiểm tra
$test_stmt = $conn->prepare("SELECT * FROM sub_lesson_tests WHERE sub_lesson_id = ?");
$test_stmt->bind_param("i", $sub_lesson_id);
$test_stmt->execute();
$questions = $test_stmt->get_result();
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bài kiểm tra: <?php echo htmlspecialchars($sub_lesson['title']); ?> - TOEIC Learning</title>
    <link rel="stylesheet" href="../style.css">
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }

        .test-container {
            width: 90%;
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .test-container h2 {
            font-size: 28px;
            font-weight: 700;
            color: #2c3e50;
            text-align: center;
            margin-bottom: 20px;
        }

        .question {
            margin-bottom: 20px;
        }

        .question p {
            font-size: 16px;
            font-weight: 500;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .option {
            margin: 5px 0;
            display: flex;
            align-items: center;
        }

        .option input {
            margin-right: 10px;
        }

        .test-container button {
            display: block;
            background: linear-gradient(90deg, #3498db, #2980b9);
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 25px;
            font-weight: 600;
            cursor: pointer;
            margin: 20px auto;
        }

        .test-container button:hover {
            background: linear-gradient(90deg, #2980b9, #2471a3);
        }

        .test-result {
            margin-top: 20px;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
            font-weight: 600;
            display: none;
        }

        .test-result.success {
            background: #d4edda;
            color: #28a745;
        }

        .test-result.error {
            background: #f8d7da;
            color: #dc3545;
        }

        .back-btn {
            display: block;
            width: 200px;
            margin: 20px auto;
            text-align: center;
            background: linear-gradient(90deg, #dc3545, #c82333);
            color: #fff;
            padding: 12px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
        }

        .back-btn:hover {
            background: linear-gradient(90deg, #c82333, #bd2130);
        }

        @media (max-width: 768px) {
            .test-container {
                width: 100%;
                margin: 20px auto;
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="test-container">
        <h2>Bài kiểm tra: <?php echo htmlspecialchars($sub_lesson['title']); ?></h2>
        <form id="test-form" data-lesson-id="<?php echo $sub_lesson_id; ?>">
            <?php if ($questions->num_rows > 0): ?>
                <?php while ($question = $questions->fetch_assoc()): ?>
                    <div class="question">
                        <p><?php echo htmlspecialchars($question['question_text']); ?></p>
                        <div class="option">
                            <input type="radio" name="q<?php echo $question['id']; ?>" value="A" id="q<?php echo $question['id']; ?>_a">
                            <label for="q<?php echo $question['id']; ?>_a"><?php echo htmlspecialchars($question['option_a']); ?></label>
                        </div>
                        <div class="option">
                            <input type="radio" name="q<?php echo $question['id']; ?>" value="B" id="q<?php echo $question['id']; ?>_b">
                            <label for="q<?php echo $question['id']; ?>_b"><?php echo htmlspecialchars($question['option_b']); ?></label>
                        </div>
                        <div class="option">
                            <input type="radio" name="q<?php echo $question['id']; ?>" value="C" id="q<?php echo $question['id']; ?>_c">
                            <label for="q<?php echo $question['id']; ?>_c"><?php echo htmlspecialchars($question['option_c']); ?></label>
                        </div>
                        <div class="option">
                            <input type="radio" name="q<?php echo $question['id']; ?>" value="D" id="q<?php echo $question['id']; ?>_d">
                            <label for="q<?php echo $question['id']; ?>_d"><?php echo htmlspecialchars($question['option_d']); ?></label>
                        </div>
                    </div>
                <?php endwhile; ?>
                <button type="submit">Nộp bài</button>
            <?php else: ?>
                <p>Chưa có câu hỏi kiểm tra.</p>
            <?php endif; ?>
        </form>
        <div class="test-result" id="test-result"></div>
        <a href="course_detail.php?id=<?php echo $course_id; ?>" class="back-btn" id="back-btn" style="display: none;">Quay lại bài học</a>
    </div>

    <script>
        document.getElementById('test-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const lessonId = e.target.dataset.lessonId;
            const resultDiv = document.getElementById('test-result');
            const formData = new FormData(e.target);

            const answers = {};
            formData.forEach((value, key) => {
                answers[key] = value;
            });

            const response = await fetch('check_test.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ lesson_id: lessonId, answers })
            });

            const result = await response.json();
            resultDiv.className = `test-result ${result.success ? 'success' : 'error'}`;
            resultDiv.textContent = result.message;
            resultDiv.style.display = 'block';

            // Ẩn form và hiển thị nút quay lại
            document.getElementById('test-form').style.display = 'none';
            document.getElementById('back-btn').style.display = 'block';
        });
    </script>
</body>
</html>
<?php $stmt->close(); $test_stmt->close(); $conn->close(); ?>
  ----- 🔚 Hết file: admin\test_page.php -----

  - 📁 uploads/
    - 📄 1.jpg
    - 📄 2.jpg
    - 📄 Báo Cáo Bài Tập Nhóm 4.docx
    - 📄 Solutions_Pre_Intermediate_Students_Book.pdf
    - 📄 videoplayback.mp4
- 📁 assets/
  - 📁 img/
    - 📄 background.jpg
    - 📄 hero-bg.jpg
- 📁 auth/
  - 📄 login.php

  ----- 📄 Nội dung file: auth\login.php -----
<?php
session_start();
require_once '../config/config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
        $password = $_POST['password'];

        $stmt = $conn->prepare("SELECT id, username, password, role FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $user = $stmt->get_result()->fetch_assoc();

        if ($user && password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['role'] = $user['role'];
            header("Location: " . ($user['role'] === 'admin' ? '../admin/admin.php' : '../admin/dashboard.php'));
            exit();
        } else {
            $error = "Sai email hoặc mật khẩu!";
        }
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đăng nhập</title>
    <link rel="stylesheet" href="../style.css">
</head>
<body>
    <form method="POST" class="auth-form">
        <h2>Đăng nhập</h2>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Mật khẩu" required>
        <button type="submit">Đăng nhập</button>
        <div class="register-link">Chưa có tài khoản? <a href="register.php">Đăng ký</a></div>
        <?php if (isset($error)): ?><p class="error"><?php echo $error; ?></p><?php endif; ?>
    </form>
</body>
</html>
  ----- 🔚 Hết file: auth\login.php -----

  - 📄 logout.php

  ----- 📄 Nội dung file: auth\logout.php -----
<?php
session_start();
session_destroy();
header("Location: ../index.html");
exit();
?>
  ----- 🔚 Hết file: auth\logout.php -----

  - 📄 register.php

  ----- 📄 Nội dung file: auth\register.php -----
<?php
require_once '../config/config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $username = filter_var($_POST['username'], FILTER_SANITIZE_STRING);
        $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
        $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        if ($stmt->get_result()->num_rows > 0) throw new Exception("Email đã tồn tại!");

        $stmt = $conn->prepare("INSERT INTO users (username, email, password, role) VALUES (?, ?, ?, 'user')");
        $stmt->bind_param("sss", $username, $email, $password);
        $stmt->execute() ? $success = "Đăng ký thành công! <a href='login.php'>Đăng nhập</a>" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đăng ký</title>
    <link rel="stylesheet" href="../style.css">
</head>
<body>
    <form method="POST" class="auth-form">
        <h2>Đăng ký</h2>
        <input type="text" name="username" placeholder="Tên đăng nhập" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Mật khẩu" required>
        <button type="submit">Đăng ký</button>
        <div class="register-link">Đã có tài khoản? <a href="login.php">Đăng nhập</a></div>
        <?php if (isset($success)): ?><p class="success"><?php echo $success; ?></p><?php endif; ?>
        <?php if (isset($error)): ?><p class="error"><?php echo $error; ?></p><?php endif; ?>
    </form>
</body>
</html>
  ----- 🔚 Hết file: auth\register.php -----

  - 📄 style.css

  ----- 📄 Nội dung file: auth\style.css -----
/* Auth Forms (Login & Register) */
.auth-form { 
    width: 400px; 
    max-width: 90%; 
    background: #fff; 
    padding: 30px; 
    border-radius: 15px; 
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); 
    margin: 0 auto; 
    position: absolute; 
    top: 50%; 
    left: 50%; 
    transform: translate(-50%, -50%); 
    background: linear-gradient(135deg, #ffffff, #f8f9fa); 
}
.auth-form h2 { 
    font-size: 28px; 
    font-weight: 600; 
    color: #2c3e50; 
    text-align: center; 
    margin-bottom: 20px; 
}
.auth-form input { 
    width: 100%; 
    padding: 12px 15px; 
    margin: 12px 0; 
    border: 2px solid #e0e0e0; 
    border-radius: 25px; 
    font-size: 16px; 
    background: #f9fbfd; 
    transition: border-color 0.3s ease; 
}
.auth-form input:focus { 
    border-color: #007bff; 
    outline: none; 
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); 
}
.auth-form button { 
    width: 100%; 
    padding: 12px; 
    background: linear-gradient(90deg, #007bff, #0056b3); 
    color: #fff; 
    border: none; 
    border-radius: 25px; 
    font-size: 16px; 
    font-weight: 600; 
    text-transform: uppercase; 
    box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3); 
}
.auth-form button:hover { 
    background: linear-gradient(90deg, #0056b3, #003d80); 
    transform: translateY(-3px); 
}
.register-link { 
    text-align: center; 
    margin-top: 15px; 
    font-size: 14px; 
    color: #7f8c8d; 
}
.register-link a { 
    color: #007bff; 
    text-decoration: none; 
    font-weight: 500; 
}
.register-link a:hover { 
    text-decoration: underline; 
    color: #0056b3; 
}
  ----- 🔚 Hết file: auth\style.css -----

- 📁 config/
  - 📄 config.php

  ----- 📄 Nội dung file: config\config.php -----
<?php
$conn = new mysqli('localhost', 'root', '', 'toeicdb');

if ($conn->connect_error) {
    die("Kết nối thất bại: " . $conn->connect_error);
}

$conn->set_charset("utf8mb4");
?>
  ----- 🔚 Hết file: config\config.php -----

- 📄 contact.php

----- 📄 Nội dung file: contact.php -----
<?php
session_start();
require_once 'config/config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: auth/login.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $message = filter_var($_POST['message'], FILTER_SANITIZE_STRING);
        $user_id = $_SESSION['user_id'];
        $username = $_SESSION['username'];

        $stmt = $conn->prepare("INSERT INTO contacts (user_id, username, message) VALUES (?, ?, ?)");
        $stmt->bind_param("iss", $user_id, $username, $message);
        $stmt->execute() ? $success = "Tin nhắn đã được gửi!" : throw new Exception($conn->error);
        $stmt->close();
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Liên hệ</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #80deea);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        main {
            flex: 1;
        }
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .logo {
            font-size: 24px;
            font-weight: bold;
        }
        .logo a {
            color: #fff;
            text-decoration: none;
        }
        nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s;
        }
        nav a:hover {
            color: #00bcd4;
        }
        .container {
            padding: 20px;
            max-width: 800px;
            margin: 20px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            color: #006064;
        }
        .auth-form {
            display: flex;
            flex-direction: column;
        }
        .auth-form textarea {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
            min-height: 100px;
        }
        .auth-form button {
            width: 100%;
            padding: 12px;
            background: linear-gradient(90deg, #007bff, #0056b3);
            color: #fff;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            text-transform: uppercase;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        }
        .auth-form button:hover {
            background: linear-gradient(90deg, #0056b3, #003d80);
            transform: translateY(-3px);
        }
        .success {
            color: green;
            text-align: center;
            margin: 10px 0;
        }
        .error {
            color: red;
            text-align: center;
            margin: 10px 0;
        }
        footer {
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 20px;
            text-align: center;
            width: 100%;
        }
        footer a {
            color: #fff;
            text-decoration: none;
            display: block;
            margin: 5px 0;
        }
        footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 768px) {
            header {
                flex-direction: column;
            }
            nav {
                margin-top: 10px;
            }
            nav a {
                margin: 5px;
            }
            footer div {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo"><a href="admin/dashboard.php">English Learning</a></div>
        <nav>
            <a href="admin/dashboard.php">Trang chủ</a>
            <a href="test/select_test.php">Thi thử</a>
            <a href="profile.php">Hồ sơ</a>
            <a href="contact.php">Liên hệ</a>
            <a href="auth/logout.php" style="color: #ff5252;">Đăng xuất</a>
        </nav>
    </header>

    <main>
        <div class="container">
            <h1>Liên hệ</h1>
            <?php if (isset($success)): ?><p class="success"><?php echo $success; ?></p><?php endif; ?>
            <?php if (isset($error)): ?><p class="error"><?php echo $error; ?></p><?php endif; ?>
            <form method="POST" class="auth-form">
                <textarea name="message" placeholder="Nhập tin nhắn của bạn" required></textarea>
                <button type="submit">Gửi</button>
            </form>
        </div>
    </main>

    <footer>
        <div style="max-width: 1200px; margin: 0 auto;">
            <div style="display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;">
                <div>
                    <h3>English Learning</h3>
                    <p>Học tiếng Anh dễ dàng và hiệu quả!</p>
                </div>
                <div>
                    <h3>Liên kết</h3>
                    <a href="about.php">Giới thiệu</a>
                    <a href="contact.php">Liên hệ</a>
                    <a href="policy.php">Chính sách</a>
                </div>
                <div>
                    <h3>Liên hệ</h3>
                    <p>Email: support@englishlearning.com</p>
                    <p>Hotline: 0123 456 789</p>
                </div>
            </div>
            <p>© 2025 English Learning. All rights reserved.</p>
        </div>
    </footer>

    <script>
        const scrollTopBtn = document.createElement('button');
        scrollTopBtn.textContent = '↑';
        scrollTopBtn.style.position = 'fixed';
        scrollTopBtn.style.bottom = '20px';
        scrollTopBtn.style.right = '20px';
        scrollTopBtn.style.background = '#0288d1';
        scrollTopBtn.style.color = '#fff';
        scrollTopBtn.style.padding = '10px';
        scrollTopBtn.style.border = 'none';
        scrollTopBtn.style.borderRadius = '50%';
        scrollTopBtn.style.cursor = 'pointer';
        scrollTopBtn.style.display = 'none';
        document.body.appendChild(scrollTopBtn);

        window.addEventListener('scroll', () => {
            scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none';
        });

        scrollTopBtn.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    </script>
</body>
</html>

<?php $conn->close(); ?>
----- 🔚 Hết file: contact.php -----

- 📄 export-code.js

----- 📄 Nội dung file: export-code.js -----
const fs = require('fs');
const path = require('path');

// Cấu hình
const projectDir = path.resolve('C:/xampp/htdocs/web_english');
const outputFile = 'toan_bo_code_va_cay_thu_muc.txt';

// Phần mở rộng cần XUẤT CODE (chỉ những loại này mới đọc nội dung file)
const allowedExtensionsForCode = ['.html', '.css', '.php', '.js'];

// Thư mục không cần scan
const excludedFolders = ['node_modules', '.git', 'vendor', 'storage', 'build', 'dist'];

const output = fs.createWriteStream(outputFile, { encoding: 'utf-8' });

// Hàm đệ quy duyệt thư mục và in cây + mã nguồn phù hợp
function exportTree(dir, depth = 0) {
  const indent = '  '.repeat(depth);
  let items = [];

  try {
    items = fs.readdirSync(dir, { withFileTypes: true });
  } catch (err) {
    output.write(`${indent}❌ Không thể đọc thư mục: ${dir}\n`);
    return;
  }

  items.forEach((item) => {
    const fullPath = path.join(dir, item.name);
    const relativePath = path.relative(projectDir, fullPath);
    const ext = path.extname(item.name).toLowerCase();

    // Nếu là thư mục
    if (item.isDirectory()) {
      if (!excludedFolders.includes(item.name)) {
        output.write(`${indent}- 📁 ${item.name}/\n`);
        exportTree(fullPath, depth + 1);
      }
    } else {
      // In ra tất cả các file
      output.write(`${indent}- 📄 ${item.name}\n`);

      // Chỉ xuất code nếu là file hợp lệ
      if (allowedExtensionsForCode.includes(ext)) {
        try {
          const content = fs.readFileSync(fullPath, 'utf-8');
          output.write(`\n${indent}----- 📄 Nội dung file: ${relativePath} -----\n`);
          output.write(content + '\n');
          output.write(`${indent}----- 🔚 Hết file: ${relativePath} -----\n\n`);
        } catch (err) {
          output.write(`${indent}❌ Lỗi đọc file: ${relativePath}\n`);
        }
      }
    }
  });
}

// Bắt đầu
output.write(`📦 Cấu trúc thư mục & mã nguồn: ${projectDir}\n\n`);
exportTree(projectDir);
output.end(() => {
  console.log(`✅ Xuất thành công ra file: ${outputFile}`);
});

----- 🔚 Hết file: export-code.js -----

- 📄 index.html

----- 📄 Nội dung file: index.html -----
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>English Learning</title>
    <link rel="stylesheet" href="style.css">
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        body {
            background: linear-gradient(135deg, #e0f7fa, #80deea); /* Gradient nền toàn trang */
            margin: 0;
            font-family: Arial, sans-serif;
        }
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1); /* Gradient header */
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        header .logo {
            font-size: 24px;
            font-weight: bold;
        }
        header .auth a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s;
        }
        header .auth a:hover {
            color: #00bcd4;
        }
        .hero {
            background: linear-gradient(135deg, #0288d1, #4fc3f7); /* Gradient hero */
            color: #fff;
            text-align: center;
            padding: 100px 20px;
        }
        .hero h1 {
            font-size: 48px;
            animation: fadeIn 1s;
        }
        .hero p {
            font-size: 24px;
            margin: 20px 0;
        }
        .hero .btn {
            background: #3498db;
            color: #fff;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            transition: opacity 0.3s;
        }
        .hero .btn:hover {
            opacity: 0.8;
        }
        @media (max-width: 768px) {
            header {
                flex-direction: column;
            }
            header .auth {
                margin-top: 10px;
            }
            header .auth a {
                margin: 5px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">English Learning</div>
        <div class="auth">
            <a href="auth/login.php">Đăng nhập</a>
            <a href="auth/register.php">Đăng ký</a>
            <a href="auth/login.php">Liên hệ</a>
        </div>
    </header>
    <section class="hero">
        <h1>Chào mừng đến với English Learning</h1>
        <p>Học Tiếng Anh từ cơ bản đến nâng cao</p>
        <a href="auth/login.php" class="btn">Bắt đầu ngay</a>
    </section>
</body>
</html>
----- 🔚 Hết file: index.html -----

- 📄 profile.php

----- 📄 Nội dung file: profile.php -----
<?php
session_start();
// Sử dụng đường dẫn tương đối từ file profile.php
require_once 'config/config.php';

// Bật hiển thị lỗi để debug (chỉ nên dùng khi phát triển)
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Kiểm tra xem người dùng đã đăng nhập chưa
if (!isset($_SESSION['user_id'])) {
    header("Location: auth/login.php"); // Đường dẫn đúng tới trang login
    exit();
}

$user_id = $_SESSION['user_id'];
$username = $_SESSION['username']; // Lấy username từ session

// Biến lưu thông báo (đổi tên, đổi mk, lỗi, thành công)
$message = ''; // Dùng chung cho các loại thông báo
$success_message = ''; // Riêng cho thành công để dễ style
$error_message = '';   // Riêng cho lỗi

// --- Xử lý yêu cầu cập nhật ---

// 1. Cập nhật Tên tài khoản
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update_username'])) {
    $new_username = trim($_POST['new_username']); // Sử dụng trim thay vì filter deprecated

    if (empty($new_username)) {
        $error_message = "Tên hiển thị không được để trống!";
    } elseif ($new_username === $username) {
        $message = "Tên mới giống tên hiện tại."; // Thông báo thông tin
    } elseif (strlen($new_username) < 3 || strlen($new_username) > 100) {
         $error_message = "Tên hiển thị phải từ 3 đến 100 ký tự.";
    } else {
        // Cập nhật tên mới (Đã bỏ kiểm tra trùng tên tùy chọn)
        $sql_update_user = "UPDATE users SET username = ? WHERE id = ?";
        $stmt_update_user = $conn->prepare($sql_update_user);
        if ($stmt_update_user) {
            $stmt_update_user->bind_param("si", $new_username, $user_id);
            if ($stmt_update_user->execute()) {
                $_SESSION['username'] = $new_username; // Cập nhật session
                $username = $new_username; // Cập nhật biến cho trang hiện tại
                $success_message = "Đã cập nhật tên hiển thị thành công!";
            } else {
                $error_message = "Lỗi khi cập nhật tên.";
                error_log("Lỗi cập nhật username cho user ID $user_id: " . $stmt_update_user->error);
            }
            $stmt_update_user->close();
        } else {
            $error_message = "Lỗi hệ thống khi chuẩn bị cập nhật tên.";
            error_log("Lỗi chuẩn bị SQL cập nhật username: " . $conn->error);
        }
    }
}

// 2. Cập nhật Mật khẩu
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update_password'])) {
    $current_password = $_POST['current_password'];
    $new_password = $_POST['new_password'];

    if (empty($current_password) || empty($new_password)) {
        $error_message = "Vui lòng nhập đầy đủ mật khẩu hiện tại và mật khẩu mới.";
    } elseif (strlen($new_password) < 6) { // Sửa lại kiểm tra độ dài mật khẩu mới >= 6
         $error_message = "Mật khẩu mới phải có ít nhất 6 ký tự.";
    } else {
        // Lấy mật khẩu hiện tại từ DB
        $stmt_pass = $conn->prepare("SELECT password FROM users WHERE id = ?");
        if ($stmt_pass) {
            $stmt_pass->bind_param("i", $user_id);
            $stmt_pass->execute();
            $result_pass = $stmt_pass->get_result();
            $user_pass_data = $result_pass->fetch_assoc();
            $stmt_pass->close();

            if ($user_pass_data && password_verify($current_password, $user_pass_data['password'])) {
                // Mật khẩu hiện tại đúng, tiến hành cập nhật mật khẩu mới
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                $stmt_update_pass = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
                if ($stmt_update_pass) {
                    $stmt_update_pass->bind_param("si", $hashed_password, $user_id);
                    if ($stmt_update_pass->execute()) {
                        $success_message = "Cập nhật mật khẩu thành công!";
                    } else {
                        $error_message = "Lỗi khi cập nhật mật khẩu.";
                        error_log("Lỗi cập nhật password cho user ID $user_id: " . $stmt_update_pass->error);
                    }
                    $stmt_update_pass->close();
                } else {
                     $error_message = "Lỗi hệ thống khi chuẩn bị cập nhật mật khẩu.";
                     error_log("Lỗi chuẩn bị SQL cập nhật password: " . $conn->error);
                }
            } else {
                $error_message = "Mật khẩu hiện tại không đúng!";
            }
        } else {
            $error_message = "Lỗi hệ thống khi kiểm tra mật khẩu.";
            error_log("Lỗi chuẩn bị SQL lấy password: " . $conn->error);
        }
    }
}

// --- Lấy dữ liệu hiển thị ---

// 1. Thông tin cơ bản của người dùng (Email, Ngày tham gia)
$sql_user = "SELECT email, created_at FROM users WHERE id = ?";
$stmt_user = $conn->prepare($sql_user);
$user_info = null;
if ($stmt_user) {
    $stmt_user->bind_param("i", $user_id);
    $stmt_user->execute();
    $result_user = $stmt_user->get_result();
    $user_info = $result_user->fetch_assoc();
    $stmt_user->close();
} else {
    error_log("Lỗi chuẩn bị SQL lấy thông tin user: " . $conn->error);
    $error_message .= " Không thể tải thông tin tài khoản.";
}
if (!$user_info) { // Xử lý nếu không tìm thấy user
    $user_info = ['email' => 'Không thể tải', 'created_at' => date('Y-m-d H:i:s')];
}

// 2. Lịch sử làm bài test sub_lesson
$sub_lesson_test_history = [];
$sql_sub_history = "SELECT sl.title AS lesson_title, sltr.score, sltr.total_questions, sltr.completed_at FROM sub_lesson_test_results sltr JOIN sub_lessons sl ON sltr.sub_lesson_id = sl.id WHERE sltr.user_id = ? ORDER BY sltr.completed_at DESC";
$stmt_sub_history = $conn->prepare($sql_sub_history);
if ($stmt_sub_history) {
    $stmt_sub_history->bind_param("i", $user_id);
    if ($stmt_sub_history->execute()) {
        $result_sub_history = $stmt_sub_history->get_result();
        while ($row = $result_sub_history->fetch_assoc()) { $sub_lesson_test_history[] = $row; }
    } else { error_log("Lỗi thực thi SQL lấy lịch sử sub_lesson test: " . $stmt_sub_history->error); }
    $stmt_sub_history->close();
} else { error_log("Lỗi chuẩn bị SQL lấy lịch sử sub_lesson test: " . $conn->error); }

// 3. Lịch sử làm bài test tổng quát (Từ bảng test_results)
$general_test_history = [];
// LƯU Ý: Cột `test_id` trong bảng `test_results` là VARCHAR. Không có bảng `tests` để lấy tên bài test.
// Sẽ hiển thị test_id trực tiếp. Bạn nên tạo bảng `tests` và JOIN để hiển thị tên dễ hiểu hơn.
$sql_general_history = "SELECT test_id, score, total_questions, completed_at FROM test_results WHERE user_id = ? ORDER BY completed_at DESC";
$stmt_general_history = $conn->prepare($sql_general_history);
if ($stmt_general_history) {
    $stmt_general_history->bind_param("i", $user_id);
    if ($stmt_general_history->execute()) {
        $result_general_history = $stmt_general_history->get_result();
        while ($row = $result_general_history->fetch_assoc()) { $general_test_history[] = $row; }
    } else { error_log("Lỗi thực thi SQL lấy lịch sử general test: " . $stmt_general_history->error); }
    $stmt_general_history->close();
} else { error_log("Lỗi chuẩn bị SQL lấy lịch sử general test: " . $conn->error); }


// 4. Lịch sử liên hệ/phản hồi
$contact_history = [];
$sql_contact = "SELECT message, status, reply, created_at, replied_at FROM contacts WHERE user_id = ? ORDER BY created_at DESC";
$stmt_contact = $conn->prepare($sql_contact);
if ($stmt_contact) {
    $stmt_contact->bind_param("i", $user_id);
    if ($stmt_contact->execute()) {
        $result_contact = $stmt_contact->get_result();
        while ($row = $result_contact->fetch_assoc()) { $contact_history[] = $row; }
    } else { error_log("Lỗi thực thi SQL lấy lịch sử liên hệ: " . $stmt_contact->error); }
    $stmt_contact->close();
} else { error_log("Lỗi chuẩn bị SQL lấy lịch sử liên hệ: " . $conn->error); }

$conn->close(); // Đóng kết nối DB *TRƯỚC KHI* bắt đầu HTML
?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hồ sơ cá nhân - <?php echo htmlspecialchars($username, ENT_QUOTES, 'UTF-8'); ?></title>
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* CSS cơ bản - Bạn có thể tùy chỉnh hoặc đưa vào file CSS riêng */
        body {
            font-family: Arial, sans-serif; /* Giống code mẫu */
            background: linear-gradient(135deg, #e0f7fa, #b2ebf2); /* Giữ gradient nền */
            color: #333;
            margin: 0;
            padding: 0;
            display: flex; /* Sử dụng flexbox cho layout chính */
            flex-direction: column; /* Xếp các phần tử theo cột */
            min-height: 100vh; /* Chiều cao tối thiểu là 100% viewport */
        }
        .container {
            padding: 25px;
            max-width: 850px; /* Rộng hơn chút */
            margin: 30px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            flex-grow: 1; /* Cho phép container chính giãn nở */
        }
        h1 {
            text-align: center;
            color: #006064; /* Giữ màu tiêu đề */
            margin-bottom: 30px;
        }

        /* Thông báo */
        .message-container { padding: 15px; margin-bottom: 20px; border-radius: 5px; border: 1px solid transparent; }
        .success-message { background-color: #d4edda; color: #155724; border-color: #c3e6cb; }
        .error-message { background-color: #f8d7da; color: #721c24; border-color: #f5c6cb; }
        .info-message { background-color: #cce5ff; color: #004085; border-color: #b8daff; }

        /* Sections */
        .profile-section {
            margin-bottom: 35px;
            padding-bottom: 25px;
            border-bottom: 1px solid #eee; /* Phân cách rõ hơn */
        }
        .profile-section:last-child { border-bottom: none; margin-bottom: 0; }
        .profile-section h2 {
            color: #00796b; /* Màu khác cho sub-heading */
            font-size: 1.3em; /* To hơn chút */
            margin-bottom: 20px;
            padding-bottom: 5px;
            border-bottom: 2px solid #e0f2f1;
        }

        /* Thông tin tài khoản */
        .profile-info p { margin-bottom: 10px; line-height: 1.6; }
        .profile-info strong { display: inline-block; width: 120px; color: #555; font-weight: bold;}

        /* Form (auth-form style từ code mẫu) */
        .auth-form { display: flex; flex-direction: column; }
        .auth-form label { margin-bottom: 5px; font-weight: bold; color: #555; }
        .auth-form input[type="text"],
        .auth-form input[type="password"] {
            padding: 12px; /* Tăng padding */
            margin-bottom: 15px; /* Khoảng cách lớn hơn */
            border: 1px solid #ccc; /* Rõ hơn */
            border-radius: 4px;
            font-size: 1em;
        }
        .auth-form button {
            width: auto; /* Không full width */
            align-self: flex-start; /* Căn trái */
            padding: 10px 25px; /* Padding cân đối */
            background: linear-gradient(90deg, #007bff, #0056b3); /* Gradient button */
            color: #fff;
            border: none;
            border-radius: 25px; /* Bo tròn */
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);
        }
        .auth-form button:hover {
            background: linear-gradient(90deg, #0056b3, #003d80);
            transform: translateY(-2px); /* Hiệu ứng hover */
            box-shadow: 0 6px 12px rgba(0, 123, 255, 0.3);
        }

        /* Bảng lịch sử */
        .history-table { width: 100%; border-collapse: collapse; margin-top: 15px; }
        .history-table th, .history-table td { border: 1px solid #ddd; padding: 10px 12px; text-align: left; vertical-align: middle; }
        .history-table th { background-color: #e9ecef; color: #495057; font-weight: 600; white-space: nowrap; }
        .history-table tr:nth-child(even) { background-color: #f8f9fa; }
        .history-table tr:hover { background-color: #e2e6ea; }
        .history-table td .status { font-weight: bold; padding: 4px 8px; border-radius: 4px; font-size: 0.85em; text-transform: uppercase; color: white; }
        .history-table td .status.pending { background-color: #ffc107; color: #333; }
        .history-table td .status.replied { background-color: #28a745; }
        .history-table td .reply-content { background-color: #f1f3f5; padding: 8px; margin-top: 5px; border-left: 3px solid #007bff; font-style: italic; color: #495057; font-size: 0.95em; }
        .no-history { text-align: center; color: #6c757d; margin-top: 20px; padding: 15px; background-color: #f8f9fa; border: 1px dashed #ced4da; border-radius: 4px; }

        /* Link button */
        .link-button {
            display: inline-block;
            text-decoration: none;
            background-color: #28a745;
            color: white;
            padding: 10px 15px;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            font-weight: 500;
        }
        .link-button:hover { background-color: #218838; }
        .center-button { text-align: center; margin-top: 20px; }

         /* Header & Footer Styles */
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 1000;
            flex-shrink: 0; /* Ngăn header co lại */
        }
        header .logo {
             font-size: 24px;
             font-weight: bold;
        }
        header .logo a {
            color: #fff;
            text-decoration: none;
        }
        header nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s ease;
        }
        header nav a:hover {
            color: #e0f7fa;
        }
        header nav a[href="auth/logout.php"] { /* Màu khác cho logout */
            color: #ffdddd;
        }
         header nav a[href="auth/logout.php"]:hover {
            color: #ffffff;
         }
        footer {
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 20px;
            text-align: center;
            margin-top: 40px; /* Đẩy footer xuống */
            flex-shrink: 0; /* Ngăn footer co lại */
        }
        footer a { color: #fff; text-decoration: none; margin: 0 10px; }
        footer a:hover { text-decoration: underline; }
        footer .footer-content { /* Sử dụng class để target div chứa nội dung footer */
            max-width: 850px; /* Giữ rộng tương đồng container chính */
            margin: 0 auto;
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            margin-bottom: 15px;
            text-align: left;
        }
        footer .footer-section { /* Thêm class cho từng cột footer */
            flex: 1; /* Chia đều không gian */
            min-width: 150px; /* Chiều rộng tối thiểu để không bị bóp méo */
            margin: 10px;
        }
         footer h3 { margin-bottom: 10px; font-size: 1.1em;}
         footer p { margin: 5px 0; font-size: 0.95em;}
         footer .social-icons a {
             color: #fff;
             font-size: 1.2em;
             margin-right: 10px;
         }

    </style>
</head>
<body>
    <header>
        <div class="logo"><a href="index.php">English Learning</a></div>
        <nav>
            <a href="./admin/dashboard.php">Trang chủ</a>
            <a href="test/select_test.php">Thi thử</a>
            <a href="contact.php">Liên hệ</a>
            <?php if (isset($_SESSION['username'])): ?>
                <span style="color: #e0f7fa; margin-left: 15px; font-weight: bold;"><i class="fas fa-user-circle"></i> Xin chào, <span id="header-username"><?php echo htmlspecialchars($_SESSION['username'], ENT_QUOTES, 'UTF-8'); ?></span>!</span>
            <?php endif; ?>
            <a href="auth/logout.php">Đăng xuất</a>
        </nav>
    </header>

    <div class="container">
        <h1>Hồ sơ cá nhân</h1>

        <?php if (!empty($success_message)): ?>
            <div class="message-container success-message"><?php echo $success_message; ?></div>
        <?php endif; ?>
        <?php if (!empty($error_message)): ?>
            <div class="message-container error-message"><?php echo $error_message; ?></div>
        <?php endif; ?>
        <?php if (!empty($message)): // Thông báo thông tin chung ?>
             <div class="message-container info-message"><?php echo $message; ?></div>
        <?php endif; ?>

        <div class="profile-section profile-info">
            <h2>Chi tiết tài khoản</h2>
            <p><strong>Tên hiển thị:</strong> <span id="display-username"><?php echo htmlspecialchars($username, ENT_QUOTES, 'UTF-8'); ?></span></p>
            <p><strong>Email:</strong> <?php echo htmlspecialchars($user_info['email'] ?? 'N/A', ENT_QUOTES, 'UTF-8'); ?></p>
            <p><strong>Ngày tham gia:</strong> <?php echo isset($user_info['created_at']) ? date('d/m/Y H:i', strtotime($user_info['created_at'])) : 'N/A'; ?></p>
        </div>

        <div class="profile-section">
            <h2>Đổi tên hiển thị</h2>
            <form method="POST" action="profile.php" class="auth-form">
                 <label for="new_username">Tên hiển thị mới:</label>
                <input type="text" id="new_username" name="new_username" value="<?php echo htmlspecialchars($username, ENT_QUOTES, 'UTF-8'); ?>" required minlength="3" maxlength="100">
                <button type="submit" name="update_username">Cập nhật tên</button>
            </form>
        </div>

         <div class="profile-section">
            <h2>Đổi mật khẩu</h2>
            <form method="POST" action="profile.php" class="auth-form">
                 <label for="current_password">Mật khẩu hiện tại:</label>
                <input type="password" id="current_password" name="current_password" placeholder="Nhập mật khẩu hiện tại" required>
                 <label for="new_password">Mật khẩu mới:</label>
                <input type="password" id="new_password" name="new_password" placeholder="Nhập mật khẩu mới (ít nhất 6 ký tự)" required minlength="6">
                <button type="submit" name="update_password">Cập nhật mật khẩu</button>
            </form>
        </div>

        <div class="profile-section">
            <h2>Lịch sử làm bài kiểm tra (Bài học nhỏ)</h2>
            <?php if (!empty($sub_lesson_test_history)): ?>
                <div style="overflow-x:auto;">
                    <table class="history-table">
                         <thead>
                            <tr><th>Tên bài học</th><th>Điểm số</th><th>Tổng số câu</th><th>Ngày hoàn thành</th></tr>
                         </thead>
                         <tbody>
                            <?php foreach ($sub_lesson_test_history as $result): ?>
                                <tr>
                                    <td><?php echo htmlspecialchars($result['lesson_title'] ?? 'N/A', ENT_QUOTES, 'UTF-8'); ?></td>
                                    <td><?php echo htmlspecialchars($result['score'], ENT_QUOTES, 'UTF-8'); ?></td>
                                    <td><?php echo htmlspecialchars($result['total_questions'], ENT_QUOTES, 'UTF-8'); ?></td>
                                    <td><?php echo date('d/m/Y H:i', strtotime($result['completed_at'])); ?></td>
                                </tr>
                            <?php endforeach; ?>
                         </tbody>
                    </table>
                </div>
            <?php else: ?>
                <p class="no-history">Chưa có lịch sử làm bài kiểm tra từ các bài học nhỏ.</p>
            <?php endif; ?>
        </div>

         <div class="profile-section">
            <h2>Lịch sử làm bài kiểm tra (Tổng quát)</h2>
            <?php if (!empty($general_test_history)): ?>
                 <div style="overflow-x:auto;">
                    <table class="history-table">
                         <thead>
                            <tr><th>Mã bài thi</th><th>Điểm số</th><th>Tổng số câu</th><th>Ngày hoàn thành</th></tr>
                         </thead>
                         <tbody>
                            <?php foreach ($general_test_history as $result): ?>
                                <tr>
                                    <td><?php echo htmlspecialchars($result['test_id'] ?? 'N/A', ENT_QUOTES, 'UTF-8'); ?> <br><small><i>(Nên tạo bảng 'tests' để hiển thị tên)</i></small></td>
                                    <td><?php echo htmlspecialchars($result['score'], ENT_QUOTES, 'UTF-8'); ?></td>
                                    <td><?php echo htmlspecialchars($result['total_questions'], ENT_QUOTES, 'UTF-8'); ?></td>
                                    <td><?php echo date('d/m/Y H:i', strtotime($result['completed_at'])); ?></td>
                                </tr>
                            <?php endforeach; ?>
                         </tbody>
                    </table>
                 </div>
            <?php else: ?>
                <p class="no-history">Chưa có lịch sử làm bài kiểm tra tổng quát.</p>
            <?php endif; ?>
        </div>


        <div class="profile-section">
            <h2>Lịch sử liên hệ & Phản hồi</h2>
            <?php if (!empty($contact_history)): ?>
                 <div style="overflow-x:auto;">
                    <table class="history-table">
                         <thead>
                            <tr><th>Nội dung gửi</th><th>Trạng thái</th><th>Ngày gửi</th><th>Phản hồi</th><th>Ngày phản hồi</th></tr>
                         </thead>
                         <tbody>
                            <?php foreach ($contact_history as $contact): ?>
                                <tr>
                                     <td><?php echo nl2br(htmlspecialchars($contact['message'] ?? '', ENT_QUOTES, 'UTF-8')); ?></td>
                                     <td>
                                         <span class="status <?php echo htmlspecialchars($contact['status'] ?? 'pending', ENT_QUOTES, 'UTF-8'); ?>">
                                             <?php echo ($contact['status'] === 'replied') ? 'Đã phản hồi' : 'Đang chờ'; ?>
                                         </span>
                                     </td>
                                     <td><?php echo isset($contact['created_at']) ? date('d/m/Y H:i', strtotime($contact['created_at'])) : 'N/A'; ?></td>
                                     <td>
                                         <?php if (!empty($contact['reply'])): ?>
                                             <div class="reply-content">
                                                 <?php echo nl2br(htmlspecialchars($contact['reply'], ENT_QUOTES, 'UTF-8')); ?>
                                             </div>
                                         <?php else: ?>
                                             <i>Chưa có</i>
                                         <?php endif; ?>
                                     </td>
                                     <td><?php echo isset($contact['replied_at']) ? date('d/m/Y H:i', strtotime($contact['replied_at'])) : ''; ?></td>
                                </tr>
                            <?php endforeach; ?>
                         </tbody>
                    </table>
                 </div>
            <?php else: ?>
                <p class="no-history">Chưa có lịch sử liên hệ nào.</p>
            <?php endif; ?>
             <div class="center-button">
                 <a href="contact.php" class="link-button">Gửi liên hệ mới</a>
             </div>
        </div>

    </div>

    <footer>
        <div class="footer-content">
             <div class="footer-section">
                 <h3>Về chúng tôi</h3>
                 <p>Ứng dụng học tiếng Anh giúp bạn cải thiện kỹ năng ngôn ngữ qua các bài học và bài kiểm tra.</p>
             </div>
             <div class="footer-section">
                 <h3>Liên kết nhanh</h3>
                 <p><a href="index.php">Trang chủ</a></p>
                 <p><a href="courses.php">Khóa học</a></p>
                 <p><a href="test/select_test.php">Thi thử</a></p>
                 <p><a href="contact.php">Liên hệ</a></p>
             </div>
             <div class="footer-section">
                 <h3>Kết nối</h3>
                 <p>Email: support@yourapp.com</p>
                 <p>Điện thoại: (123) 456-7890</p>
                 <div class="social-icons">
                     <a href="#"><i class="fab fa-facebook"></i></a>
                     <a href="#"><i class="fab fa-twitter"></i></a>
                     <a href="#"><i class="fab fa-instagram"></i></a>
                 </div>
             </div>
        </div>
        <p>&copy; <?php echo date('Y'); ?> English Learning. All rights reserved.</p>
    </footer>


    <script>
         // Cập nhật tên hiển thị trên header nếu thành công (Mã này chạy ngay khi script được tải)
         <?php if (strpos($success_message, 'tên hiển thị') !== false): ?>
             // Giả sử header có span với id="header-username"
             const headerUsernameSpan = document.getElementById('header-username');
             if (headerUsernameSpan) {
                 // Sử dụng json_encode để nhúng chuỗi PHP vào JavaScript an toàn
                 headerUsernameSpan.textContent = <?php echo json_encode($username); ?>;
             }
             // Cập nhật tiêu đề trang
              document.title = 'Hồ sơ cá nhân - ' + <?php echo json_encode($username); ?>;
              // Cập nhật span chào mừng trong trang
              const welcomeUsernameSpan = document.getElementById('display-username');
              if(welcomeUsernameSpan) {
                  // Sử dụng json_encode để nhúng chuỗi PHP vào JavaScript an toàn
                  welcomeUsernameSpan.textContent = <?php echo json_encode($username); ?>;
              }
         <?php endif; ?>

        // Gói mã xử lý DOM vào sự kiện DOMContentLoaded để đảm bảo trang đã sẵn sàng
        document.addEventListener('DOMContentLoaded', () => {
            // Nút quay lại đầu trang (Giữ nguyên từ code mẫu)
            const scrollTopBtn = document.createElement('button');
            scrollTopBtn.innerHTML = '&#8593;'; // Mũi tên lên
            scrollTopBtn.style.position = 'fixed';
            scrollTopBtn.style.bottom = '30px'; // Cao hơn chút
            scrollTopBtn.style.right = '30px';
            scrollTopBtn.style.background = '#007bff'; // Màu khác
            scrollTopBtn.style.color = '#fff';
            scrollTopBtn.style.padding = '8px 12px'; // Điều chỉnh padding
            scrollTopBtn.style.border = 'none';
            scrollTopBtn.style.borderRadius = '50%';
            scrollTopBtn.style.cursor = 'pointer';
            scrollTopBtn.style.display = 'none'; // Ẩn ban đầu
            scrollTopBtn.style.fontSize = '18px';
            scrollTopBtn.style.zIndex = '999';
            scrollTopBtn.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';

            // Chỉ thêm nút vào body khi DOM đã tải xong
            document.body.appendChild(scrollTopBtn);

            window.addEventListener('scroll', () => {
                scrollTopBtn.style.display = window.scrollY > 300 ? 'block' : 'none'; // Hiện khi cuộn xuống 300px
            });

            scrollTopBtn.addEventListener('click', () => {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });

            console.log("Script DOMContentLoaded đã chạy.");
        });

         console.log("Trang profile đã tải xong (script tag processed).");
     </script>
</body>
</html>
----- 🔚 Hết file: profile.php -----

- 📄 README.md
- 📁 searchbar/
  - 📁 css/
    - 📄 admin.css

    ----- 📄 Nội dung file: searchbar\css\admin.css -----
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f4f4f4;
}

.login-container, .dashboard {
    max-width: 600px;
    margin: 0 auto;
    background: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.login-container h2, .dashboard h2 {
    text-align: center;
}

.login-container form {
    display: flex;
    flex-direction: column;
}

.login-container label {
    margin: 10px 0 5px;
}

.login-container input, .dashboard input, .dashboard select, .dashboard textarea {
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.login-container button, .dashboard button {
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.login-container button:hover, .dashboard button:hover {
    background-color: #0056b3;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

table, th, td {
    border: 1px solid #ddd;
}

th, td {
    padding: 10px;
    text-align: left;
}

th {
    background-color: #007bff;
    color: white;
}

tr:nth-child(even) {
    background-color: #f2f2f2;
}

.action-buttons a {
    margin-right: 10px;
    text-decoration: none;
    color: #007bff;
}

.action-buttons a:hover {
    text-decoration: underline;
}
    ----- 🔚 Hết file: searchbar\css\admin.css -----

    - 📄 style.css

    ----- 📄 Nội dung file: searchbar\css\style.css -----

.search-wrapper {
    position: fixed;
    z-index: 1000;
    left: 20px;
    top: 20px;
    user-select: none; /* Ngăn chọn văn bản khi kéo */
}

.search-icon {
    background-color: #007bff;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    cursor: pointer;
}

.search-icon.hidden {
    display: none;
}

.search-bar {
    background-color: #fff;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    width: 280px;
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer; /* Đổi thành pointer để rõ ràng khi nhấn */
}

.search-bar.hidden {
    display: none;
}

.search-bar input, .search-bar select, .search-bar button {
    width: 100%;
    padding: 8px;
    margin: 5px 0;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 14px;
    box-sizing: border-box;
}

.search-bar select {
    appearance: none;
    background: url('data:image/svg+xml;utf8,<svg fill="black" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>') no-repeat right 10px center;
}

.search-bar button {
    background-color: #007bff;
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.2s;
}

.search-bar button:hover {
    background-color: #0056b3;
}
.result {
    margin-top: 10px;
    background: #f9f9f9;
    padding: 10px;
    border-radius: 5px;
    width: 100%;
    max-height: 150px;
    overflow-y: auto;
    font-size: 14px;
    text-align: left;
}

.result h3 {
    margin: 0 0 5px;
    font-size: 16px;
    color: #333;
}

.result p {
    margin: 5px 0;
    color: #555;
}

.result button {
    padding: 5px 10px;
    margin: 5px 5px 0 0;
    font-size: 12px;
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1001;
}

.modal-content {
    background-color: white;
    margin: 15% auto;
    padding: 20px;
    width: 50%;
    max-width: 500px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    position: relative;
}

.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
    color: #333;
}

.close:hover {
    color: #007bff;
}
    ----- 🔚 Hết file: searchbar\css\style.css -----

  - 📄 detail.php

  ----- 📄 Nội dung file: searchbar\detail.php -----
<?php
header('Content-Type: application/json');
include '../config/config.php';

$id = isset($_GET['id']) ? intval($_GET['id']) : 0;

$sql = "SELECT * FROM dictionary WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('i', $id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    echo json_encode($result->fetch_assoc());
} else {
    echo json_encode(['error' => 'Không tìm thấy thông tin']);
}

$stmt->close();
$conn->close();
?>
  ----- 🔚 Hết file: searchbar\detail.php -----

  - 📁 includes/
    - 📄 db_connect.php

    ----- 📄 Nội dung file: searchbar\includes\db_connect.php -----
<?php
session_start();
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'dictionary_db';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
$conn->set_charset("utf8");
?>
    ----- 🔚 Hết file: searchbar\includes\db_connect.php -----

  - 📄 index.php

  ----- 📄 Nội dung file: searchbar\index.php -----
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tra cứu từ điển Anh-Việt</title>
    <link rel="stylesheet" href="../searchbar/css/style.css">
</head>
<body>
    <!-- Khối chứa biểu tượng và bảng tra -->
    <div id="search-wrapper" class="search-wrapper">
        <!-- Biểu tượng tìm kiếm -->
        <div id="search-icon" class="search-icon">
            <svg width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="#fff" stroke-width="2">
                <circle cx="11" cy="11" r="8"></circle>
                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
        </div>
        <!-- Bảng tra -->
        <div id="search-bar" class="search-bar hidden">
            <input type="text" id="search-input" placeholder="Nhập từ cần tra...">
            <select id="language">
                <option value="en">Anh → Việt</option>
                <option value="vi">Việt → Anh</option>
            </select>
            <button onclick="searchWord()">Tra cứu</button>
            <!-- Kết quả tìm kiếm -->
            <div id="result" class="result"></div>
        </div>
    </div>

    <!-- Bảng chi tiết -->
    <div id="detail-modal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">×</span>
            <div id="detail-content"></div>
        </div>
    </div>

    <script src="../searchbar/js/script.js"></script>
</body>
</html>
  ----- 🔚 Hết file: searchbar\index.php -----

  - 📁 js/
    - 📄 script.js

    ----- 📄 Nội dung file: searchbar\js\script.js -----
// Kiểm tra xem searchWrapper đã được khai báo chưa
if (typeof searchWrapper === 'undefined') {
    let searchWrapper = document.getElementById('search-wrapper');
    let isDragging = false;
    let currentX, currentY, initialX, initialY;

    // Hàm kéo thả
    function startDragging(e) {
        // Chỉ kéo khi nhấn vào search-icon hoặc khu vực trống của search-bar
        if (e.target.closest('#search-input') || e.target.closest('select') || e.target.closest('button')) return;
        initialX = e.clientX - currentX;
        initialY = e.clientY - currentY;
        isDragging = true;
        e.preventDefault(); // Ngăn hành vi mặc định
    }

    function drag(e) {
        if (isDragging) {
            e.preventDefault();
            currentX = e.clientX - initialX;
            currentY = e.clientY - initialY;
            searchWrapper.style.left = currentX + 'px';
            searchWrapper.style.top = currentY + 'px';
        }
    }

    function stopDragging() {
        isDragging = false;
    }

    // Gắn sự kiện kéo thả
    searchWrapper.addEventListener('mousedown', startDragging);
    document.addEventListener('mousemove', drag);
    document.addEventListener('mouseup', stopDragging);

    // Lưu vị trí và trạng thái ẩn/hiện
    window.addEventListener('beforeunload', () => {
        localStorage.setItem('searchPos', JSON.stringify({
            x: searchWrapper.style.left,
            y: searchWrapper.style.top
        }));
        localStorage.setItem('searchBarHidden', document.getElementById('search-bar').classList.contains('hidden'));
    });

    // Khôi phục vị trí và trạng thái
    window.addEventListener('load', () => {
        let pos = localStorage.getItem('searchPos');
        if (pos) {
            pos = JSON.parse(pos);
            searchWrapper.style.left = pos.x;
            searchWrapper.style.top = pos.y;
        } else {
            searchWrapper.style.left = '20px';
            searchWrapper.style.top = '20px';
        }
        currentX = parseInt(searchWrapper.style.left) || 20;
        currentY = parseInt(searchWrapper.style.top) || 20;

        let isBarHidden = localStorage.getItem('searchBarHidden') === 'true';
        let searchBar = document.getElementById('search-bar');
        let searchIcon = document.getElementById('search-icon');
        searchBar.classList.toggle('hidden', isBarHidden);
        searchIcon.classList.toggle('hidden', !isBarHidden);
    });

    // Nhấn bảng tra để thu gọn thành biểu tượng
    document.getElementById('search-bar').addEventListener('click', (e) => {
        if (!e.target.closest('#search-input') && !e.target.closest('select') && !e.target.closest('button') && !e.target.closest('.result')) {
            let searchBar = document.getElementById('search-bar');
            let searchIcon = document.getElementById('search-icon');
            searchBar.classList.add('hidden');
            searchIcon.classList.remove('hidden');
        }
    });

    // Nhấn biểu tượng để hiện bảng tra
    document.getElementById('search-icon').addEventListener('click', () => {
        let searchBar = document.getElementById('search-bar');
        let searchIcon = document.getElementById('search-icon');
        searchBar.classList.remove('hidden');
        searchIcon.classList.add('hidden');
    });
}

// Tìm kiếm từ
function searchWord() {
    let word = document.getElementById('search-input').value.trim();
    let language = document.getElementById('language').value;

    if (!word) {
        alert('Vui lòng nhập từ cần tra!');
        return;
    }

    fetch(`../searchbar/search.php?word=${encodeURIComponent(word)}&lang=${language}`)
        .then(response => response.json())
        .then(data => {
            let resultDiv = document.getElementById('result');
            if (data.error) {
                resultDiv.innerHTML = `<p>${data.error}</p>`;
            } else {
                resultDiv.innerHTML = `
                    <h3>${data.word}</h3>
                    <p><strong>Nghĩa:</strong> ${data.translation}</p>
                    <p><strong>Loại từ:</strong> ${data.word_type || 'Không có'}</p>
                    <button onclick="speak('${data.word}')">Nghe</button>
                    <button onclick="showDetail(${data.id})">Xem chi tiết</button>
                `;
            }
        })
        .catch(error => console.error('Error:', error));
}

// Đọc từ
function speak(text) {
    let utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = document.getElementById('language').value === 'en' ? 'en-US' : 'vi-VN';
    speechSynthesis.speak(utterance);
}

// Hiển thị chi tiết
function showDetail(id) {
    fetch(`../searchbar/detail.php?id=${id}`)
        .then(response => response.json())
        .then(data => {
            let modal = document.getElementById('detail-modal');
            let content = document.getElementById('detail-content');
            content.innerHTML = `
                <h2>${data.word}</h2>
                <p><strong>Phiên âm:</strong> ${data.pronunciation || 'Không có'}</p>
                <p><strong>Nghĩa:</strong> ${data.translation}</p>
                <p><strong>Loại từ:</strong> ${data.word_type || 'Không có'}</p>
                <p><strong>Giải thích:</strong> ${data.detailed_explanation || 'Không có'}</p>
                <p><strong>Ví dụ:</strong> ${data.example || 'Không có'}</p>
            `;
            modal.style.display = 'block';
        })
        .catch(error => console.error('Error:', error));
}

// Đóng modal
function closeModal() {
    document.getElementById('detail-modal').style.display = 'none';
}
    ----- 🔚 Hết file: searchbar\js\script.js -----

  - 📄 search.php

  ----- 📄 Nội dung file: searchbar\search.php -----
<?php
header('Content-Type: application/json');
include '../config/config.php';

$word = isset($_GET['word']) ? trim($_GET['word']) : '';
$language = isset($_GET['lang']) ? $_GET['lang'] : 'en';

if (empty($word)) {
    echo json_encode(['error' => 'Vui lòng nhập từ cần tra']);
    exit;
}

$sql = "SELECT * FROM dictionary WHERE word = ? AND language = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('ss', $word, $language);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    echo json_encode($result->fetch_assoc());
} else {
    echo json_encode(['error' => 'Không tìm thấy từ']);
}

$stmt->close();
$conn->close();
?>
  ----- 🔚 Hết file: searchbar\search.php -----

- 📄 style.css

----- 📄 Nội dung file: style.css -----
/* Reset */
* { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Arial, sans-serif; }
body {
    margin: 0;
    font-family: 'Segoe UI', Arial, sans-serif;
    background: #f4f4f4;
    color: #2c3e50;
    line-height: 1.6;
}
/* Common */
button, a { cursor: pointer; transition: all 0.3s ease; }
button:hover, a:hover { transform: translateY(-2px); }
table { width: 100%; border-collapse: collapse; }
th, td { padding: 12px; border: 1px solid #e0e0e0; text-align: left; }
.success { color: #28a745; text-align: center; padding: 10px; }
.error { color: #dc3545; text-align: center; padding: 10px; }

/* Header */
/* --- Header --- */
header {
    background: linear-gradient(90deg, #007bff, #0056b3);
    color: #fff;
    padding: 20px 5%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    position: sticky;
    top: 0;
    z-index: 1000;
}

.logo {
    font-size: 28px;
    font-weight: bold;
    text-transform: uppercase;
}

.auth a {
    color: #fff;
    text-decoration: none;
    margin-left: 20px;
    font-weight: 500;
    position: relative;
}

.auth a::after {
    content: '';
    display: block;
    width: 0;
    height: 2px;
    background: #ffcc00;
    transition: width 0.3s ease;
    position: absolute;
    bottom: -4px;
    left: 0;
}

.auth a:hover::after {
    width: 100%;
}

/* --- Hero Section --- */
.hero {
    text-align: center;
    padding: 80px 10%;
    background: linear-gradient(135deg, #0056b3, #007bff);
    color: #fff;
}

.hero h1 {
    font-size: 42px;
    font-weight: 700;
    text-transform: uppercase;
    margin-bottom: 20px;
}

.hero p {
    font-size: 20px;
    font-style: italic;
    margin-bottom: 30px;
}

.btn {
    display: inline-block;
    background: #ffcc00;
    color: #2c3e50;
    padding: 12px 30px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    transition: background 0.3s ease, transform 0.3s ease;
}

.btn:hover {
    background: #ffe066;
    transform: scale(1.05);
}
header h1 { 
    font-size: 28px; 
    font-weight: 700; 
    letter-spacing: 1px; 
    text-transform: uppercase; 
}
header h1 #testTitle { 
    font-size: 24px; 
    font-weight: 500; 
    color: #ffcc00; 
}
.audio-player { 
    flex: 1; 
    margin: 0 20px; 
    text-align: center; 
}
.audio-player audio { 
    width: 100%; 
    max-width: 400px; 
    border-radius: 8px; 
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15); 
    background: #fff; 
}
#exitBtn { 
    background: linear-gradient(90deg, #e74c3c, #c0392b); 
    color: #fff; 
    border: none; 
    padding: 10px 25px; 
    border-radius: 25px; 
    font-weight: 600; 
    text-transform: uppercase; 
    box-shadow: 0 4px 10px rgba(231, 76, 60, 0.3); 
}
#exitBtn:hover { 
    background: linear-gradient(90deg, #c0392b, #a93226); 
    transform: translateY(-3px); 
}

/* Hero */
.hero { text-align: center; padding: 60px 10%; background: linear-gradient(135deg, #0056b3, #007bff); color: #fff; }
.hero h1 { font-size: 36px; font-weight: 700; margin-bottom: 20px; text-transform: uppercase; }
.hero p { font-size: 18px; margin: 15px 0; font-style: italic; }
.btn { display: inline-block; background: #ffcc00; padding: 12px 25px; color: #2c3e50; font-weight: 600; border-radius: 25px; text-decoration: none; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); }
.btn:hover { background: #e2e6ea; transform: scale(1.05); }

/* Courses */
.courses { padding: 50px 10%; background: #fff; }
.courses h2 { text-align: center; margin-bottom: 30px; font-size: 28px; font-weight: 600; color: #34495e; }
.course-list { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 25px; }
.course { background: #f8f9fa; padding: 20px; border-radius: 10px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05); text-align: center; transition: transform 0.3s ease; }
.course:hover { transform: translateY(-5px); }
.course h3 { color: #007bff; margin-bottom: 15px; font-size: 20px; }
.course a { background: #007bff; color: #fff; padding: 10px 20px; border-radius: 25px; text-decoration: none; font-weight: 500; }
.course a:hover { background: #0056b3; }

/* Footer */
footer { text-align: center; padding: 15px; background: #2c3e50; color: #fff; font-size: 14px; }

/* Auth Forms (Login & Register) */
.auth-form { 
    width: 400px; 
    max-width: 90%; 
    background: #fff; 
    padding: 30px; 
    border-radius: 15px; 
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); 
    margin: 0 auto; 
    position: absolute; 
    top: 50%; 
    left: 50%; 
    transform: translate(-50%, -50%); 
    background: linear-gradient(135deg, #ffffff, #f8f9fa); 
}
.auth-form h2 { 
    font-size: 28px; 
    font-weight: 600; 
    color: #2c3e50; 
    text-align: center; 
    margin-bottom: 20px; 
}
.auth-form input { 
    width: 100%; 
    padding: 12px 15px; 
    margin: 12px 0; 
    border: 2px solid #e0e0e0; 
    border-radius: 25px; 
    font-size: 16px; 
    background: #f9fbfd; 
    transition: border-color 0.3s ease; 
}
.auth-form input:focus { 
    border-color: #007bff; 
    outline: none; 
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); 
}
.auth-form button { 
    width: 100%; 
    padding: 12px; 
    background: linear-gradient(90deg, #007bff, #0056b3); 
    color: #fff; 
    border: none; 
    border-radius: 25px; 
    font-size: 16px; 
    font-weight: 600; 
    text-transform: uppercase; 
    box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3); 
}
.auth-form button:hover { 
    background: linear-gradient(90deg, #0056b3, #003d80); 
    transform: translateY(-3px); 
}
.register-link { 
    text-align: center; 
    margin-top: 15px; 
    font-size: 14px; 
    color: #7f8c8d; 
}
.register-link a { 
    color: #007bff; 
    text-decoration: none; 
    font-weight: 500; 
}
.register-link a:hover { 
    text-decoration: underline; 
    color: #0056b3; 
}

/* Admin */
.container { 
    display: flex; 
    min-height: 100vh; 
    background: #f0f2f5; 
}
.sidebar { 
    width: 280px; 
    background: linear-gradient(180deg, #2c3e50, #1a252f); 
    padding: 30px 20px; 
    color: #fff; 
    position: fixed; 
    height: 100%; 
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2); 
}
.sidebar h2 { 
    font-size: 24px; 
    font-weight: 700; 
    margin-bottom: 40px; 
    text-align: center; 
    color: #ecf0f1; 
    text-transform: uppercase; 
    letter-spacing: 1px; 
}
.sidebar ul { 
    list-style: none; 
}
.sidebar li { 
    padding: 15px 20px; 
    margin: 10px 0; 
    border-radius: 8px; 
    font-size: 16px; 
    font-weight: 500; 
}
.sidebar li:hover { 
    background: #34495e; 
}
.sidebar li.active { 
    background: #3498db; 
    box-shadow: 0 2px 5px rgba(52, 152, 219, 0.5); 
}
.sidebar a { 
    color: #fff; 
    text-decoration: none; 
    display: block; 
}
.main-content { 
    flex: 1; 
    padding: 40px; 
    margin-left: 280px; 
    background: #f0f2f5; 
}
.content-section { 
    display: none; 
    background: #fff; 
    padding: 30px; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
}
.content-section.active { 
    display: block; 
}
h1 { 
    font-size: 32px; 
    font-weight: 700; 
    color: #2c3e50; 
    margin-bottom: 25px; 
    text-align: center; 
}
h2 { 
    font-size: 24px; 
    font-weight: 600; 
    color: #34495e; 
    margin: 20px 0 15px; 
}
.admin-form { 
    display: grid; 
    gap: 15px; 
    max-width: 600px; 
    margin: 0 auto 30px; 
}
.admin-form input, 
.admin-form textarea { 
    width: 100%; 
    padding: 12px 15px; 
    border: 2px solid #e0e0e0; 
    border-radius: 8px; 
    font-size: 16px; 
    background: #f9fbfd; 
    transition: border-color 0.3s ease; 
}
.admin-form input:focus, 
.admin-form textarea:focus { 
    border-color: #3498db; 
    outline: none; 
}
.admin-form textarea { 
    min-height: 100px; 
}
.admin-form button { 
    background: linear-gradient(90deg, #28a745, #218838); 
    color: #fff; 
    border: none; 
    padding: 12px; 
    border-radius: 8px; 
    font-weight: 600; 
    text-transform: uppercase; 
}
.admin-form button:hover { 
    background: linear-gradient(90deg, #218838, #1e7e34); 
    transform: translateY(-3px); 
}
th { 
    background: #f5f5f5; 
    font-weight: 600; 
    color: #34495e; 
}
.delete-btn { 
    color: #dc3545; 
    font-weight: 600; 
    text-decoration: none; 
    padding: 5px 10px; 
    border-radius: 5px; 
}
.delete-btn:hover { 
    background: #dc3545; 
    color: #fff; 
}
.chart-container { 
    width: 70%; 
    max-width: 800px; 
    margin: 30px auto; 
    padding: 20px; 
    background: #fff; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
}
img { 
    max-width: 100px; 
    border-radius: 8px; 
}

/* Course Detail */
.course-image { 
    max-width: 100%; 
    height: auto; 
    margin: 20px auto; 
    border-radius: 10px; 
    display: block; 
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
}
.course-content { 
    margin-top: 25px; 
    padding: 20px; 
    background: #f9fbfd; 
    border-radius: 10px; 
}
.video-container { 
    text-align: center; 
    margin-top: 30px; 
}
video { 
    width: 100%; 
    max-width: 600px; 
    border-radius: 10px; 
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
}
.download-links { 
    text-align: center; 
    margin-top: 25px; 
}
.download-links a { 
    background: #28a745; 
    color: #fff; 
    padding: 12px 20px; 
    border-radius: 25px; 
    text-decoration: none; 
    font-weight: 500; 
}
.download-links a:hover { 
    background: #218838; 
}
.back-btn { 
    display: block; 
    width: 200px; 
    margin: 30px auto; 
    text-align: center; 
    background: #dc3545; 
    color: #fff; 
    padding: 12px; 
    border-radius: 25px; 
    text-decoration: none; 
    font-weight: 600; 
}
.back-btn:hover { 
    background: #c82333; 
}

/* TOEIC Test */
.container { 
    display: flex; 
    flex-wrap: wrap; 
    max-width: 1400px; 
    margin: 20px auto; 
    gap: 20px; 
    padding: 0 20px; 
}
.part-navigation { 
    width: 20%; 
    min-width: 200px; 
    padding: 20px; 
    background 

: #fff; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
    position: sticky; 
    top: 90px; 
    height: fit-content; 
    max-height: calc(100vh - 100px); 
    overflow-y: auto; 
}
.part-btn { 
    width: 100%; 
    padding: 15px; 
    margin: 8px 0; 
    background: #ecf0f1; 
    color: #2c3e50; 
    border: none; 
    border-radius: 10px; 
    font-size: 16px; 
    font-weight: 600; 
    text-align: left; 
    transition: background 0.3s ease, color 0.3s ease; 
}
.part-btn:hover { 
    background: #bdc3c7; 
}
.part-btn.active { 
    background: linear-gradient(90deg, #3498db, #2980b9); 
    color: #fff; 
    box-shadow: 0 2px 5px rgba(52, 152, 219, 0.3); 
}
.question-section { 
    width: 55%; 
    min-width: 500px; 
    padding: 30px; 
    background: #fff; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
    min-height: 600px; 
}
.question { 
    margin-bottom: 25px; 
    padding: 20px; 
    background: #f9fbfd; 
    border-radius: 10px; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03); 
}
.question p { 
    font-size: 18px; 
    font-weight: 600; 
    color: #34495e; 
    margin-bottom: 15px; 
}
.question img { 
    max-width: 100%; 
    width: 400px; 
    height: auto; 
    display: block; 
    margin: 15px auto; 
    border-radius: 10px; 
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
}
.option { 
    margin: 10px 0; 
    display: flex; 
    align-items: center; 
}
.option input[type="radio"] { 
    margin-right: 12px; 
    accent-color: #3498db; 
    width: 18px; 
    height: 18px; 
}
.option label { 
    font-size: 16px; 
    color: #2c3e50; 
}
.sidebar { 
    width: 20%; 
    min-width: 200px; 
    padding: 20px; 
    background: #fff; 
    border-radius: 15px; 
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05); 
    position: sticky; 
    top: 90px; 
    height: fit-content; 
    max-height: calc(100vh - 100px); 
    overflow-y: auto; 
}
.timer { 
    padding: 15px; 
    background: #ecf0f1; 
    color: #2c3e50; 
    border-radius: 10px; 
    font-size: 16px; 
    font-weight: 600; 
    text-align: center; 
    margin-bottom: 15px; 
    transition: background 0.3s ease, color 0.3s ease; 
}
#timeDisplay { 
    font-size: 28px; 
    font-weight: 700; 
    color: #c0392b; 
    display: block; 
    margin-top: 10px; 
}
.question-list-title { 
    font-size: 16px; 
    font-weight: 600; 
    color: #2c3e50; 
    margin-bottom: 15px; 
    padding-bottom: 5px; 
    border-bottom: 2px solid #ecf0f1; 
}
.question-list { 
    display: grid; 
    grid-template-columns: repeat(auto-fill, minmax(45px, 1fr)); 
    gap: 10px; 
    max-height: 350px; 
    overflow-y: auto; 
    padding: 10px 0; 
}
.question-list button { 
    width: 100%; 
    padding: 15px; 
    background: #ecf0f1; 
    color: #2c3e50; 
    border: none; 
    border-radius: 10px; 
    font-size: 16px; 
    font-weight: 600; 
    text-align: center; 
    transition: background 0.3s ease, color 0.3s ease; 
}
.question-list button:hover { 
    background: #bdc3c7; 
}
.question-list button.active { 
    background: linear-gradient(90deg, #3498db, #2980b9); 
    color: #fff; 
    box-shadow: 0 2px 5px rgba(52, 152, 219, 0.3); 
}
#submitBtn { 
    width: 100%; 
    padding: 15px; 
    background: linear-gradient(90deg, #2ecc71, #27ae60); 
    color: #fff; 
    border: none; 
    border-radius: 10px; 
    font-size: 16px; 
    font-weight: 600; 
    text-transform: uppercase; 
    margin-top: 25px; 
    box-shadow: 0 4px 10px rgba(46, 204, 113, 0.3); 
}
#submitBtn:hover { 
    background: linear-gradient(90deg, #27ae60, #219653); 
    transform: translateY(-3px); 
}
#scoreDisplay { 
    margin-top: 20px; 
    text-align: center; 
    font-size: 18px; 
    font-weight: 600; 
    color: #34495e; 
}
.scroll-top-btn { 
    position: fixed; 
    bottom: 30px; 
    right: 30px; 
    padding: 12px 25px; 
    background: linear-gradient(90deg, #3498db, #2980b9); 
    color: #fff; 
    border: none; 
    border-radius: 25px; 
    font-weight: 600; 
    box-shadow: 0 4px 10px rgba(52, 152, 219, 0.3); 
    display: none; 
}
.scroll-top-btn:hover { 
    background: linear-gradient(90deg, #2980b9, #2471a3); 
    transform: translateY(-3px); 
}
/* Select Test */
.select-test-container { 
    max-width: 1200px; 
    margin: 30px auto; 
    padding: 20px; 
    background: #fff; 
    border-radius: 10px; 
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05); 
}
.refresh-btn { 
    margin: 0 auto 20px; 
    padding: 8px 16px; 
    background: #3498db; 
    color: #fff; 
    border: none; 
    border-radius: 5px; 
    display: block; 
}
.refresh-btn:hover { 
    background: #2980b9; 
}
.test-grid { 
    display: grid; 
    grid-template-columns: repeat(4, 1fr); 
    gap: 20px; 
}
.test-card { 
    background: #fff; 
    border: 1px solid #e0e0e0; 
    border-radius: 8px; 
    padding: 15px; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); 
}
.test-card h3 { 
    font-size: 18px; 
    font-weight: 600; 
    color: #2c3e50; 
    margin-bottom: 10px; 
}
.test-info { 
    display: flex; 
    flex-wrap: wrap; 
    gap: 10px; 
    margin-bottom: 10px; 
    font-size: 14px; 
    color: #7f8c8d; 
}
.action-btn { 
    width: 100%; 
    padding: 8px; 
    background: #3498db; 
    color: #fff; 
    border: none; 
    border-radius: 5px; 
}
.action-btn:hover { 
    background: #2980b9; 
}
textarea {
    width: 100%;
    padding: 12px 15px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 16px;
    background: #f9fbfd;
    transition: border-color 0.3s ease;
    min-height: 100px;
    resize: vertical;
}
textarea:focus {
    border-color: #007bff;
    outline: none;
}


----- 🔚 Hết file: style.css -----

- 📁 test/
  - 📄 admin.php

  ----- 📄 Nội dung file: test\admin.php -----
<?php
session_start();
require_once '../config/config.php';

// Kiểm tra đăng nhập
if (!isset($_SESSION['user_id'])) {
    header('Content-Type: application/json');
    echo json_encode(['error' => 'Chưa đăng nhập']);
    exit();
}

// Kiểm tra quyền admin chỉ cho tạo/xóa
if (($_SERVER['REQUEST_METHOD'] === 'POST' || (isset($_GET['action']) && $_GET['action'] === 'delete')) && $_SESSION['role'] !== 'admin') {
    header('Content-Type: application/json');
    echo json_encode(['error' => 'Không có quyền admin']);
    exit();
}

$testsDir = '../tests/';

function getTests($dir) {
    if (!is_dir($dir)) {
        return [];
    }
    return array_filter(glob($dir . '*'), 'is_dir');
}

// Xử lý action=list để trả về danh sách bài thi (cho cả user và admin)
if (isset($_GET['action']) && $_GET['action'] === 'list') {
    header('Content-Type: application/json');
    $tests = getTests($testsDir);
    $testNames = array_map('basename', $tests);
    echo json_encode($testNames);
    exit;
}

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['create_test'])) {
    try {
        $testId = preg_match('/^test\d+$/', trim($_POST['test_id'])) ? trim($_POST['test_id']) : 'test' . trim($_POST['test_id']);
        $uploadDir = "{$testsDir}{$testId}/";
        if (file_exists($uploadDir)) throw new Exception("ID '{$testId}' đã tồn tại!");

        $dirs = [$uploadDir, "{$uploadDir}uploads/", "{$uploadDir}img/", "{$uploadDir}audio/"];
        foreach ($dirs as $dir) if (!mkdir($dir, 0777, true)) throw new Exception("Không thể tạo thư mục!");

        $csvPath = "{$uploadDir}uploads/questions.csv";
        if (!move_uploaded_file($_FILES['csv_file']['tmp_name'], $csvPath)) throw new Exception("Lỗi upload CSV!");

        foreach (['images' => 'img', 'audios' => 'audio'] as $type => $folder) {
            if (isset($_FILES[$type]) && !empty($_FILES[$type]['name'][0])) {
                foreach ($_FILES[$type]['tmp_name'] as $key => $tmpName) {
                    if ($_FILES[$type]['error'][$key] === UPLOAD_ERR_OK) {
                        move_uploaded_file($tmpName, "{$uploadDir}{$folder}/" . $_FILES[$type]['name'][$key]);
                    }
                }
            }
        }
        $success = "Tạo bài kiểm tra {$testId} thành công!";
    } catch (Exception $e) {
        $error = "Lỗi: " . $e->getMessage();
    }
}

if (isset($_GET['action']) && $_GET['action'] === 'delete' && isset($_GET['test'])) {
    $testDir = "{$testsDir}{$_GET['test']}";
    function deleteDir($dir) {
        if (!file_exists($dir)) return true;
        foreach (scandir($dir) as $item) {
            if ($item == '.' || $item == '..') continue;
            is_dir("$dir/$item") ? deleteDir("$dir/$item") : unlink("$dir/$item");
        }
        return rmdir($dir);
    }
    echo json_encode(deleteDir($testDir) ? ['status' => 'success'] : ['status' => 'error']);
    exit;
}

$tests = getTests($testsDir);
?>

<div class="test-admin">
    <h2>Quản Lý Bài Kiểm Tra</h2>
    <?php if (isset($success)): ?><p class="success"><?php echo $success; ?></p><?php endif; ?>
    <?php if (isset($error)): ?><p class="error"><?php echo $error; ?></p><?php endif; ?>
    <form method="POST" enctype="multipart/form-data" class="admin-form">
        <input type="text" name="test_id" placeholder="ID (VD: 2)" required>
        <input type="file" name="csv_file" accept=".csv" required>
        <input type="file" name="images[]" accept="image/*" multiple>
        <input type="file" name="audios[]" accept="audio/*" multiple>
        <button type="submit" name="create_test">Tạo</button>
    </form>
    <table>
        <tr><th>ID</th><th>Hành động</th></tr>
        <?php foreach ($tests as $test): ?>
            <tr>
                <td><?php echo basename($test); ?></td>
                <td><button class="delete-btn" onclick="deleteTest('<?php echo basename($test); ?>')">Xóa</button></td>
            </tr>
        <?php endforeach; ?>
    </table>
</div>

<script>
    function deleteTest(testId) {
        if (confirm(`Xóa ${testId}?`)) {
            fetch(`admin.php?action=delete&test=${testId}`).then(res => res.json()).then(data => {
                if (data.status === 'success') location.reload();
            });
        }
    }
</script>
  ----- 🔚 Hết file: test\admin.php -----

  - 📄 get_questions.php

  ----- 📄 Nội dung file: test\get_questions.php -----
<?php
header('Content-Type: application/json');
require_once '../config/config.php';

$test = filter_var($_GET['test'] ?? 'test1', FILTER_SANITIZE_STRING);
$filePath = "../tests/{$test}/uploads/questions.csv";

try {
    if (!file_exists($filePath)) throw new Exception("File CSV không tồn tại!");
    $file = fopen($filePath, 'r');
    $headers = fgetcsv($file);
    $data = [];
    while ($row = fgetcsv($file)) {
        if (count($row) === count($headers)) $data[] = array_combine($headers, array_map('trim', $row));
    }
    fclose($file);
    echo json_encode($data);
} catch (Exception $e) {
    echo json_encode(['error' => $e->getMessage()]);
}
exit;
  ----- 🔚 Hết file: test\get_questions.php -----

  - 📄 index.html

  ----- 📄 Nội dung file: test\index.html -----
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TOEIC Test</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #80deea);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        main {
            flex: 1;
        }
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .logo {
            font-size: 24px;
            font-weight: bold;
        }
        .logo a {
            color: #fff;
            text-decoration: none;
        }
        nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s;
        }
        nav a:hover {
            color: #00bcd4;
        }
        header h1 {
            font-size: 24px;
            margin: 0;
        }
        .audio-player {
            margin: 0 20px;
        }
        .audio-player audio {
            border-radius: 5px;
        }
        #exitBtn {
            background: linear-gradient(90deg, #dc3545, #c82333);
            color: #fff;
            padding: 8px 16px;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        #exitBtn:hover {
            background: linear-gradient(90deg, #c82333, #bd2130);
        }
        .container {
            padding: 20px;
            max-width: 1200px;
            margin: 20px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            display: flex;
            gap: 20px;
        }
        .part-navigation {
            display: flex;
            flex-direction: column;
            gap: 8px;
            margin-bottom: 20px;
            width: 120px;
        }
        .part-btn {
            background: #e0f7fa;
            color: #006064;
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: background 0.3s, transform 0.3s;
        }
        .part-btn:hover {
            background: #b3e5fc;
            transform: translateY(-2px);
        }
        .part-btn.active {
            background: linear-gradient(90deg, #3498db, #2980b9);
            color: #fff;
        }
        .question-section {
            flex: 1;
            background: #f9fbfd;
            padding: 20px;
            border-radius: 10px;
        }
        .sidebar {
            width: 300px;
            background: #f9fbfd;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .timer {
            font-size: 18px;
            color: #006064;
            margin-bottom: 20px;
        }
        .question-list-title {
            font-size: 18px;
            font-weight: 600;
            color: #006064;
            margin-bottom: 10px;
        }
        .question-list {
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 20px;
        }
        #submitBtn {
            width: 100%;
            background: linear-gradient(90deg, #2ecc71, #27ae60);
            color: #fff;
            padding: 10px;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        }
        #submitBtn:hover {
            background: linear-gradient(90deg, #27ae60, #219653);
        }
        #scoreDisplay {
            margin-top: 20px;
            font-size: 18px;
            color: #006064;
            text-align: center;
        }
        .scroll-top-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #0288d1;
            color: #fff;
            padding: 10px;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            display: none;
        }
        footer {
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 20px;
            text-align: center;
            width: 100%;
        }
        footer a {
            color: #fff;
            text-decoration: none;
            display: block;
            margin: 5px 0;
        }
        footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 768px) {
            header {
                flex-direction: column;
                align-items: flex-start;
            }
            nav {
                margin-top: 10px;
            }
            nav a {
                margin: 5px;
            }
            header h1 {
                font-size: 20px;
            }
            .audio-player {
                margin: 10px 0;
            }
            .container {
                flex-direction: column;
                padding: 10px;
            }
            .part-navigation {
                width: 100%;
                align-items: center;
            }
            .part-btn {
                width: 100px;
            }
            .sidebar {
                width: 100%;
            }
            footer div {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo"><a href="../admin/dashboard.php">English Learning</a></div>
        <div style="display: flex; align-items: center; gap: 20px;">
            <h1>TOEIC Test <span id="testTitle"></span></h1>
            <div class="audio-player">
                <audio id="audioPlayer" controls><source id="audioSource" src="" type="audio/mpeg"></audio>
            </div>
            <button id="exitBtn">Thoát</button>
        </div>
        <nav>
            <a href="../admin/dashboard.php">Trang chủ</a>
            <a href="../test/select_test.php">Thi thử</a>
            <a href="../profile.php">Hồ sơ</a>
            <a href="../contact.php">Liên hệ</a>
            <a href="../auth/logout.php" style="color: #ff5252;">Đăng xuất</a>
        </nav>
    </header>

    <main>
        <div class="container">
            <nav class="part-navigation">
                <button class="part-btn active" data-part="1">Part 1</button>
                <button class="part-btn" data-part="2">Part 2</button>
                <button class="part-btn" data-part="3">Part 3</button>
                <button class="part-btn" data-part="4">Part 4</button>
                <button class="part-btn" data-part="5">Part 5</button>
                <button class="part-btn" data-part="6">Part 6</button>
                <button class="part-btn" data-part="7">Part 7</button>
            </nav>
            <section id="questionSection" class="question-section"></section>
            <aside class="sidebar">
                <div class="timer">Thời gian: <span id="timeDisplay">120:00</span></div>
                <div class="question-list-title">Câu hỏi</div>
                <div class="question-list" id="questionList"></div>
                <button id="submitBtn">Nộp bài</button>
                <div id="scoreDisplay">Điểm: 0/200</div>
            </aside>
        </div>
    </main>

    <footer>
        <div style="max-width: 1200px; margin: 0 auto;">
            <div style="display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;">
                <div>
                    <h3>English Learning</h3>
                    <p>Học tiếng Anh dễ dàng và hiệu quả!</p>
                </div>
                <div>
                    <h3>Liên kết</h3>
                    <a href="../about.php">Giới thiệu</a>
                    <a href="../contact.php">Liên hệ</a>
                    <a href="../policy.php">Chính sách</a>
                </div>
                <div>
                    <h3>Liên hệ</h3>
                    <p>Email: support@englishlearning.com</p>
                    <p>Hotline: 0123 456 789</p>
                </div>
            </div>
            <p>© 2025 English Learning. All rights reserved.</p>
        </div>
    </footer>

    <button id="scrollTopBtn" class="scroll-top-btn">↑</button>
    <script src="script.js"></script>
</body>
</html>
  ----- 🔚 Hết file: test\index.html -----

  - 📄 questions.csv
  - 📄 script.js

  ----- 📄 Nội dung file: test\script.js -----
document.addEventListener('DOMContentLoaded', () => {
    const els = {
        questionSection: document.getElementById('questionSection'),
        questionList: document.getElementById('questionList'),
        timeDisplay: document.getElementById('timeDisplay'),
        submitBtn: document.getElementById('submitBtn'),
        exitBtn: document.getElementById('exitBtn'),
        scrollTopBtn: document.getElementById('scrollTopBtn'),
        partButtons: document.querySelectorAll('.part-btn'),
        scoreDisplay: document.getElementById('scoreDisplay'),
        audioPlayer: document.getElementById('audioPlayer'),
        audioSource: document.getElementById('audioSource'),
        testTitle: document.getElementById('testTitle')
    };

    let currentPart = 1, timeLeft = 120 * 60, timer, questions = {};
    const test = new URLSearchParams(window.location.search).get('test') || localStorage.getItem('currentTest') || 'test1';
    els.testTitle.textContent = test.replace('test', '');

    async function loadQuestions() {
        const data = await (await fetch(`get_questions.php?test=${test}`)).json();
        if (data.error) throw new Error(data.error);
        questions = data.reduce((acc, q) => {
            const part = parseInt(q.part);
            acc[part] = acc[part] || [];
            acc[part].push(q);
            return acc;
        }, {});
        displayQuestions(currentPart);
    }

    function startTimer() {
        timer = setInterval(() => {
            timeLeft--;
            els.timeDisplay.textContent = `${Math.floor(timeLeft / 60)}:${String(timeLeft % 60).padStart(2, '0')}`;
            if (timeLeft <= 0) { clearInterval(timer); alert('Hết giờ!'); submitTest(); }
        }, 1000);
    }

    function updateAudio(part) {
        const src = [2, 3, 4].includes(part) ? `../tests/${test}/audio/part${part}.mp3` : '';
        els.audioSource.src = src;
        if (src) els.audioPlayer.load();
    }

    function displayQuestions(part) {
        els.questionSection.innerHTML = '';
        const qs = questions[part] || [];
        if (!qs.length) return els.questionSection.innerHTML = '<p>Không có câu hỏi.</p>';

        updateAudio(part);
        qs.forEach(q => {
            const div = document.createElement('div');
            div.classList.add('question');
            div.innerHTML = `<p>Câu ${q.id}: ${q.content || ''}</p>`;
            if (q.image) div.innerHTML += `<img src="../tests/${test}/img/${q.image}" alt="Câu ${q.id}">`;
            const opts = q.type === 'part2' ? ['A', 'B', 'C'] : ['A', 'B', 'C', 'D'];
            opts.forEach(o => {
                if (q[`option${o}`]) div.innerHTML += `
                    <div class="option">
                        <input type="radio" name="q${q.id}" value="${o}" id="q${q.id}-${o}">
                        <label for="q${q.id}-${o}">${o}</label>
                    </div>`;
            });
            els.questionSection.appendChild(div);
        });
        updateQuestionList(qs);
        loadAnswers();
    }

    function updateQuestionList(qs) {
        els.questionList.innerHTML = qs.map(q => `<button onclick="document.querySelector('input[name=q${q.id}]')?.scrollIntoView()">${q.id}</button>`).join('');
    }

    function saveAnswer(qId, val) {
        const answers = JSON.parse(localStorage.getItem(`toeic_${test}`)) || {};
        answers[qId] = val;
        localStorage.setItem(`toeic_${test}`, JSON.stringify(answers));
    }

    function loadAnswers() {
        const answers = JSON.parse(localStorage.getItem(`toeic_${test}`)) || {};
        document.querySelectorAll('input[type="radio"]').forEach(i => {
            if (answers[i.name.replace('q', '')] === i.value) i.checked = true;
            i.addEventListener('change', () => saveAnswer(i.name.replace('q', ''), i.value));
        });
    }

    function submitTest() {
        clearInterval(timer);
        const answers = JSON.parse(localStorage.getItem(`toeic_${test}`)) || {};
        let score = 0, total = 0;
        Object.values(questions).flat().forEach(q => {
            if (q.correct) { total++; if (answers[q.id] === q.correct) score++; }
        });
        els.scoreDisplay.textContent = `Điểm: ${score}/${total}`;
        alert(`Điểm: ${score}/${total}`);
        localStorage.removeItem(`toeic_${test}`);
        window.location.href = 'select_test.php';
    }

    els.partButtons.forEach(b => b.addEventListener('click', () => {
        els.partButtons.forEach(btn => btn.classList.remove('active'));
        b.classList.add('active');
        currentPart = parseInt(b.dataset.part);
        displayQuestions(currentPart);
    }));
    els.submitBtn.addEventListener('click', () => confirm('Nộp bài?') && submitTest());
    els.exitBtn.addEventListener('click', () => confirm('Thoát?') && (clearInterval(timer), localStorage.removeItem(`toeic_${test}`), window.location.href = 'select_test.php'));
    els.scrollTopBtn.addEventListener('click', () => window.scrollTo({ top: 0, behavior: 'smooth' }));
    window.addEventListener('scroll', () => els.scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none');

    startTimer();
    loadQuestions();
});
  ----- 🔚 Hết file: test\script.js -----

  - 📄 select_test.php

  ----- 📄 Nội dung file: test\select_test.php -----
<?php
session_start();
require_once '../config/config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: ../auth/login.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chọn Bài Thi</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #80deea);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        main {
            flex: 1;
        }
        header {
            position: sticky;
            top: 0;
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .logo {
            font-size: 24px;
            font-weight: bold;
        }
        .logo a {
            color: #fff;
            text-decoration: none;
        }
        nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 15px;
            transition: color 0.3s;
        }
        nav a:hover {
            color: #00bcd4;
        }
        .select-test-container {
            padding: 20px;
            max-width: 1200px;
            margin: 20px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        h2 {
            text-align: center;
            font-size: 32px;
            margin-bottom: 30px;
            color: #006064;
        }
        .refresh-btn {
            display: block;
            margin: 0 auto 20px;
            padding: 10px 20px;
            background: linear-gradient(90deg, #3498db, #2980b9);
            color: #fff;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        }
        .refresh-btn:hover {
            background: linear-gradient(90deg, #2980b9, #2471a3);
            transform: translateY(-3px);
        }
        .test-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        .test-card {
            background: #f9fbfd;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            transition: transform 0.3s;
        }
        .test-card:hover {
            transform: translateY(-5px);
        }
        .test-card h3 {
            font-size: 24px;
            color: #34495e;
            margin-bottom: 10px;
        }
        .test-info {
            margin-bottom: 15px;
            color: #666;
        }
        .test-info span {
            margin: 0 10px;
        }
        .action-btn {
            background: linear-gradient(90deg, #2ecc71, #27ae60);
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.3);
        }
        .action-btn:hover {
            background: linear-gradient(90deg, #27ae60, #219653);
        }
        footer {
            background: linear-gradient(90deg, #006064, #00acc1);
            color: #fff;
            padding: 20px;
            text-align: center;
            width: 100%;
        }
        footer a {
            color: #fff;
            text-decoration: none;
            display: block;
            margin: 5px 0;
        }
        footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 768px) {
            header {
                flex-direction: column;
            }
            nav {
                margin-top: 10px;
            }
            nav a {
                margin: 5px;
            }
            .select-test-container {
                padding: 10px;
            }
            .test-grid {
                grid-template-columns: 1fr;
            }
            footer div {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo"><a href="../admin/dashboard.php">English Learning</a></div>
        <nav>
            <a href="../admin/dashboard.php">Trang chủ</a>
            <a href="select_test.php">Thi thử</a>
            <a href="../profile.php">Hồ sơ</a>
            <a href="../contact.php">Liên hệ</a>
            <a href="../auth/logout.php" style="color: #ff5252;">Đăng xuất</a>
        </nav>
    </header>

    <main>
        <div class="select-test-container">
            <h2>Chọn Bài Thi</h2>
            <button id="refreshBtn" class="refresh-btn">Làm mới</button>
            <div id="testList" class="test-grid"></div>
        </div>
    </main>

    <footer>
        <div style="max-width: 1200px; margin: 0 auto;">
            <div style="display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 20px;">
                <div>
                    <h3>English Learning</h3>
                    <p>Học tiếng Anh dễ dàng và hiệu quả!</p>
                </div>
                <div>
                    <h3>Liên kết</h3>
                    <a href="../about.php">Giới thiệu</a>
                    <a href="../contact.php">Liên hệ</a>
                    <a href="../policy.php">Chính sách</a>
                </div>
                <div>
                    <h3>Liên hệ</h3>
                    <p>Email: support@englishlearning.com</p>
                    <p>Hotline: 0123 456 789</p>
                </div>
            </div>
            <p>© 2025 English Learning. All rights reserved.</p>
        </div>
    </footer>

    <script>
        async function loadTests() {
            try {
                const response = await fetch('../test/admin.php?action=list', { 
                    cache: 'no-store',
                    credentials: 'include'
                });
                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error(`Lỗi HTTP: ${response.status} - ${errorText}`);
                }
                const data = await response.json();
                if (data.error) {
                    document.getElementById('testList').innerHTML = `<p>${data.error}</p>`;
                    return;
                }
                document.getElementById('testList').innerHTML = data.length ? data.map(t => `
                    <div class="test-card">
                        <h3>${t.replace('test', 'Test ')}</h3>
                        <div class="test-info"><span>⏰ 120 phút</span><span>✏️ 200 câu</span></div>
                        <button class="action-btn" onclick="startTest('${t}')">Làm ngay</button>
                    </div>`).join('') : '<p>Chưa có bài thi.</p>';
            } catch (error) {
                console.error('Lỗi khi tải danh sách bài thi:', error.message);
                document.getElementById('testList').innerHTML = '<p>Lỗi tải danh sách bài thi: ' + error.message + '</p>';
            }
        }

        function startTest(testId) {
            localStorage.setItem('currentTest', testId);
            window.location.href = `index.html?test=${testId}`;
        }

        document.addEventListener('DOMContentLoaded', () => {
            loadTests();
            document.getElementById('refreshBtn').addEventListener('click', loadTests);
        });

        const scrollTopBtn = document.createElement('button');
        scrollTopBtn.textContent = '↑';
        scrollTopBtn.style.position = 'fixed';
        scrollTopBtn.style.bottom = '20px';
        scrollTopBtn.style.right = '20px';
        scrollTopBtn.style.background = '#0288d1';
        scrollTopBtn.style.color = '#fff';
        scrollTopBtn.style.padding = '10px';
        scrollTopBtn.style.border = 'none';
        scrollTopBtn.style.borderRadius = '50%';
        scrollTopBtn.style.cursor = 'pointer';
        scrollTopBtn.style.display = 'none';
        document.body.appendChild(scrollTopBtn);

        window.addEventListener('scroll', () => {
            scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none';
        });

        scrollTopBtn.addEventListener('click', () => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    </script>
</body>
</html>
  ----- 🔚 Hết file: test\select_test.php -----

- 📁 tests/
  - 📁 testNew Economy TOEIC Test 1/
    - 📁 audio/
    - 📁 img/
      - 📄 1.png
      - 📄 2.png
      - 📄 3.png
      - 📄 4.png
      - 📄 5.png
      - 📄 6.png
    - 📁 uploads/
      - 📄 questions.csv
  - 📁 testNew Economy TOEIC Test 2/
    - 📁 audio/
    - 📁 img/
      - 📄 1.png
      - 📄 2.png
      - 📄 3.png
      - 📄 4.png
      - 📄 5.png
      - 📄 6.png
    - 📁 uploads/
      - 📄 questions.csv
  - 📁 testNew Economy TOEIC Test 3/
    - 📁 audio/
    - 📁 img/
      - 📄 1.png
      - 📄 2.png
      - 📄 3.png
      - 📄 4.png
      - 📄 5.png
      - 📄 6.png
    - 📁 uploads/
      - 📄 questions.csv
- 📁 uploads/
